{
  "address": "0xf6e8FB4422bB5D330b88fD76A04A428f6eaC8982",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "authorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLinkedDiamond",
      "outputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "_transferLimiter",
          "type": "address"
        }
      ],
      "name": "linkDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "recoverLostAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverLostDEFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allow",
          "type": "bool"
        }
      ],
      "name": "updateBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfd91ef4c2b575ee48d5049db30c399b856594bd56bc786f72406160366825b41",
  "receipt": {
    "to": null,
    "from": "0x05309918A451156C2cE41f3C8dF89672ce83e944",
    "contractAddress": "0xf6e8FB4422bB5D330b88fD76A04A428f6eaC8982",
    "transactionIndex": 3,
    "gasUsed": "1345395",
    "logsBloom": "0x
    "blockHash": "0x77f975f853452d24db9761d190676b547e12a871a49a851c93cf8f8b0fe00e11",
    "transactionHash": "0xfd91ef4c2b575ee48d5049db30c399b856594bd56bc786f72406160366825b41",
    "logs": [],
    "blockNumber": 20361705,
    "cumulativeGasUsed": "1780814",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "43114"
  ],
  "numDeployments": 1,
  "solcInputHash": "d8f7fc12f2c999751abaddf75b0e79fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLinkedDiamond\",\"outputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"_transferLimiter\",\"type\":\"address\"}],\"name\":\"linkDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"recoverLostAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverLostDEFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Foundation Team\",\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals\":{\"details\":\"Returns the decimals places of the token.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"title\":\"DEFO Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/DEFOToken.sol\":\"DEFOToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ITransferLimiter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.15;\\n\\n/** @title  ILimiter, limiter for DEFO token transfer\\n  * @author Decentralized Foundation Team\\n*/\\n\\ninterface ITransferLimiter {\\n    function yieldGemTransferLimit(\\n        address to,\\n        address from,\\n        uint256 tokenId\\n    ) external;\\n\\n    function DEFOTokenTransferLimit(\\n        address to,\\n        address from,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa7741cdf7be9bb3980ef635519bf7eca4b51c951116f52735621b75c9314d278\",\"license\":\"GPL-3.0\"},\"contracts/token/DEFOToken.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"../interfaces/ITransferLimiter.sol\\\";\\n\\n/** @title  DEFO Token\\n  * @author Decentralized Foundation Team\\n  * @notice ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\\n*/\\n\\ncontract DEFOToken is Pausable, IERC20, IERC20Metadata {\\n    ITransferLimiter transferLimiter;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    // @notice Admins list\\n    mapping(address => uint256) public wards;\\n\\n    // @notice Blacklist\\n    mapping(address => bool) public blacklist;\\n\\n    // --- ERC20 Data ---\\n    string public constant name = \\\"DEFO Token\\\";\\n    string public constant symbol = \\\"DEFO\\\";\\n    string public constant version = \\\"1\\\";\\n    uint8 public constant decimals = 18;\\n    uint256 public totalSupply;\\n    bool public initialized;\\n\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    mapping(address => uint256) public nonces;\\n\\n\\n    // --- EIP712 niceties ---\\n    bytes32 public DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n\\n    /* ============ External and Public Functions ============ */\\n\\n    modifier auth() {\\n        require(wards[_msgSender()] == 1, \\\"DEFOToken:not-authorized\\\");\\n        _;\\n    }\\n\\n    constructor(uint256 chainId_) {\\n    }\\n\\n    function initialize(uint256 chainId_) external {\\n        if (!initialized) {\\n            initialized = true;\\n            wards[_msgSender()] = 1;\\n            DOMAIN_SEPARATOR = keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(bytes(version)),\\n                    chainId_,\\n                    address(this)\\n                )\\n            );\\n        }\\n    }\\n\\n\\n    // --- Token ---\\n\\n    function transfer(address dst, uint256 wad) external returns (bool) {\\n        return transferFrom(_msgSender(), dst, wad);\\n    }\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public returns (bool) {\\n        require(!paused(), \\\"DEFOToken:paused\\\");\\n        require(balanceOf[src] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        require(!blacklist[src] && !blacklist[dst], \\\"DEFOToken:blacklisted\\\");\\n        if (wards[_msgSender()] != 1 && wards[src] != 1 && address(transferLimiter) != address(0))\\n            transferLimiter.DEFOTokenTransferLimit(src, dst, wad);\\n        if (src != _msgSender() && allowance[src][_msgSender()] != type(uint256).max) {\\n            require(allowance[src][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[src][_msgSender()] = sub(allowance[src][_msgSender()], wad);\\n        }\\n        balanceOf[src] = sub(balanceOf[src], wad);\\n        balanceOf[dst] = add(balanceOf[dst], wad);\\n        emit Transfer(src, dst, wad);\\n        return true;\\n    }\\n\\n\\n    function burn(address usr, uint256 wad) external {\\n        require(balanceOf[usr] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        if (usr != _msgSender() && allowance[usr][_msgSender()] != type(uint256).max) {\\n            require(allowance[usr][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[usr][_msgSender()] = sub(allowance[usr][_msgSender()], wad);\\n        }\\n        balanceOf[usr] = sub(balanceOf[usr], wad);\\n        totalSupply = sub(totalSupply, wad);\\n        emit Transfer(usr, address(0), wad);\\n    }\\n\\n    function approve(address usr, uint256 wad) external returns (bool) {\\n        allowance[_msgSender()][usr] = wad;\\n        emit Approval(_msgSender(), usr, wad);\\n        return true;\\n    }\\n\\n    // --- Approve by signature ---\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed))\\n            )\\n        );\\n\\n        require(holder != address(0), \\\"DEFOToken:invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"DEFOToken:invalid-permit\\\");\\n        require(expiry == 0 || block.timestamp <= expiry, \\\"DEFOToken:permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"DEFOToken:invalid-nonce\\\");\\n        uint256 wad = allowed ? type(uint256).max : 0;\\n        allowance[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n\\n    /* ============ External and Public Admin Functions ============ */\\n\\n    function linkDiamond(ITransferLimiter _transferLimiter) external auth {\\n        transferLimiter = _transferLimiter;\\n    }\\n\\n    function mint(address usr, uint256 wad) external auth {\\n        balanceOf[usr] = add(balanceOf[usr], wad);\\n        totalSupply = add(totalSupply, wad);\\n        emit Transfer(address(0), usr, wad);\\n    }\\n\\n    // @notice Grant access\\n    // @param guy admin to grant auth\\n    function rely(address guy) external auth {\\n        wards[guy] = 1;\\n    }\\n\\n    // @notice Deny access\\n    // @param guy deny auth for\\n    function deny(address guy) external auth {\\n        wards[guy] = 0;\\n    }\\n\\n\\n    // Recovering lost tokens and avax\\n    function recoverLostDEFO(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) external auth {\\n        IERC20(_token).transfer(_to, _amount);\\n    }\\n\\n    function recoverLostAVAX(address _to) external auth {\\n        payable(_to).transfer(address(this).balance);\\n    }\\n\\n    function updateBlacklist(address _address, bool _allow) external auth {\\n        blacklist[_address] = _allow;\\n    }\\n\\n    function pause() external auth {\\n        _pause();\\n    }\\n\\n    function unpause() external auth {\\n        _unpause();\\n    }\\n\\n    function getLinkedDiamond() external view returns (ITransferLimiter) {\\n        return transferLimiter;\\n    }\\n\\n    function authorized(address guy) external view returns (bool) {\\n        return wards[guy] == 1;\\n    }\\n    /* ============ Internal Functions ============ */\\n\\n    // --- Math ---\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xbdff4427f624d80b93e3176d3fa4ed4edcf51ecaebeb44321e024cf9f550da2d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063764abbe81161010f578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e14610477578063ec659a97146104a2578063f9f92be4146104cb578063fe4b84df146104ee57600080fd5b8063a9059cbb14610405578063b918161114610418578063bf353dbb14610444578063d356ee9d1461046457600080fd5b80639155e083116100de5780639155e083146103a957806395d89b41146103bc5780639c52a7f1146103df5780639dc29fac146103f257600080fd5b8063764abbe81461035b5780637ecebe001461036e5780638456cb591461038e5780638fcbaf0c1461039657600080fd5b80633644e5151161018757806354fd4d501161015657806354fd4d50146102fd5780635c975abb1461031d57806365fae35e1461032857806370a082311461033b57600080fd5b80633644e515146102c4578063395086fb146102cd5780633f4ba83a146102e257806340c10f19146102ea57600080fd5b806318160ddd116101c357806318160ddd1461025957806323b872dd1461027057806330adf81f14610283578063313ce567146102aa57600080fd5b806306fdde03146101ea578063095ea7b314610229578063158ef93e1461024c575b600080fd5b6102136040518060400160405280600a8152602001692222a327902a37b5b2b760b11b81525081565b604051610220919061145e565b60405180910390f35b61023c6102373660046114c8565b610501565b6040519015158152602001610220565b60055461023c9060ff1681565b61026260045481565b604051908152602001610220565b61023c61027e3660046114f4565b610569565b6102627fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b6102b2601281565b60405160ff9091168152602001610220565b61026260095481565b6102e06102db366004611535565b610932565b005b6102e061099a565b6102e06102f83660046114c8565b6109d3565b610213604051806040016040528060018152602001603160f81b81525081565b60005460ff1661023c565b6102e0610336366004611535565b610a94565b610262610349366004611535565b60066020526000908152604090205481565b6102e06103693660046114f4565b610ae0565b61026261037c366004611535565b60086020526000908152604090205481565b6102e0610b88565b6102e06103a4366004611560565b610bbf565b6102e06103b73660046115e9565b610edd565b610213604051806040016040528060048152602001634445464f60e01b81525081565b6102e06103ed366004611535565b610f37565b6102e06104003660046114c8565b610f80565b61023c6104133660046114c8565b61117b565b61023c610426366004611535565b6001600160a01b031660009081526002602052604090205460011490565b610262610452366004611535565b60026020526000908152604090205481565b6102e0610472366004611535565b61118f565b610262610485366004611622565b600760209081526000928352604080842090915290825290205481565b60005461010090046001600160a01b03166040516001600160a01b039091168152602001610220565b61023c6104d9366004611535565b60036020526000908152604090205460ff1681565b6102e06104fc366004611650565b6111f3565b3360008181526007602090815260408083206001600160a01b03871680855290835281842086905590518581529293909290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060015b92915050565b6000805460ff16156105b55760405162461bcd60e51b815260206004820152601060248201526f11115193d51bdad95b8e9c185d5cd95960821b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526006602052604090205482111561061d5760405162461bcd60e51b815260206004820152601e60248201527f4445464f546f6b656e3a696e73756666696369656e742d62616c616e6365000060448201526064016105ac565b6001600160a01b03841660009081526003602052604090205460ff1615801561065f57506001600160a01b03831660009081526003602052604090205460ff16155b6106a35760405162461bcd60e51b815260206004820152601560248201527411115193d51bdad95b8e989b1858dadb1a5cdd1959605a1b60448201526064016105ac565b336000908152600260205260409020546001148015906106dc57506001600160a01b038416600090815260026020526040902054600114155b80156106f7575060005461010090046001600160a01b031615155b15610771576000546040516319f8088760e31b81526001600160a01b0386811660048301528581166024830152604482018590526101009092049091169063cfc0443890606401600060405180830381600087803b15801561075857600080fd5b505af115801561076c573d6000803e3d6000fd5b505050505b6001600160a01b03841633148015906107af57506001600160a01b038416600090815260076020908152604080832033845290915290205460001914155b1561087a576001600160a01b03841660009081526007602090815260408083203384529091529020548211156108275760405162461bcd60e51b815260206004820181905260248201527f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e636560448201526064016105ac565b6001600160a01b0384166000908152600760209081526040808320338452909152902054610855908361130a565b6001600160a01b03851660009081526007602090815260408083203384529091529020555b6001600160a01b03841660009081526006602052604090205461089d908361130a565b6001600160a01b0380861660009081526006602052604080822093909355908516815220546108cc9083611325565b6001600160a01b0380851660008181526006602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109209086815260200190565b60405180910390a35060019392505050565b336000908152600260205260409020546001146109615760405162461bcd60e51b81526004016105ac90611669565b6040516001600160a01b038216904780156108fc02916000818181858888f19350505050158015610996573d6000803e3d6000fd5b5050565b336000908152600260205260409020546001146109c95760405162461bcd60e51b81526004016105ac90611669565b6109d1611340565b565b33600090815260026020526040902054600114610a025760405162461bcd60e51b81526004016105ac90611669565b6001600160a01b038216600090815260066020526040902054610a259082611325565b6001600160a01b038316600090815260066020526040902055600454610a4b9082611325565b6004556040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b33600090815260026020526040902054600114610ac35760405162461bcd60e51b81526004016105ac90611669565b6001600160a01b0316600090815260026020526040902060019055565b33600090815260026020526040902054600114610b0f5760405162461bcd60e51b81526004016105ac90611669565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8291906116a0565b50505050565b33600090815260026020526040902054600114610bb75760405162461bcd60e51b81526004016105ac90611669565b6109d1611392565b600954604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60208201526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905285151560c08201526000919060e00160405160208183030381529060405280519060200120604051602001610c6092919061190160f01b81526002810192909252602282015260420190565b60408051601f19818403018152919052805160209091012090506001600160a01b038916610cd05760405162461bcd60e51b815260206004820152601b60248201527f4445464f546f6b656e3a696e76616c69642d616464726573732d30000000000060448201526064016105ac565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610d23573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610d8d5760405162461bcd60e51b815260206004820152601860248201527f4445464f546f6b656e3a696e76616c69642d7065726d6974000000000000000060448201526064016105ac565b851580610d9a5750854211155b610de65760405162461bcd60e51b815260206004820152601860248201527f4445464f546f6b656e3a7065726d69742d65787069726564000000000000000060448201526064016105ac565b6001600160a01b0389166000908152600860205260408120805491610e0a836116d3565b919050558714610e5c5760405162461bcd60e51b815260206004820152601760248201527f4445464f546f6b656e3a696e76616c69642d6e6f6e636500000000000000000060448201526064016105ac565b600085610e6a576000610e6e565b6000195b6001600160a01b038b81166000818152600760209081526040808320948f16808452948252918290208590559051848152939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050505050565b33600090815260026020526040902054600114610f0c5760405162461bcd60e51b81526004016105ac90611669565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b33600090815260026020526040902054600114610f665760405162461bcd60e51b81526004016105ac90611669565b6001600160a01b0316600090815260026020526040812055565b6001600160a01b038216600090815260066020526040902054811115610fe85760405162461bcd60e51b815260206004820152601e60248201527f4445464f546f6b656e3a696e73756666696369656e742d62616c616e6365000060448201526064016105ac565b6001600160a01b038216331480159061102657506001600160a01b038216600090815260076020908152604080832033845290915290205460001914155b156110f1576001600160a01b038216600090815260076020908152604080832033845290915290205481111561109e5760405162461bcd60e51b815260206004820181905260248201527f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e636560448201526064016105ac565b6001600160a01b03821660009081526007602090815260408083203384529091529020546110cc908261130a565b6001600160a01b03831660009081526007602090815260408083203384529091529020555b6001600160a01b038216600090815260066020526040902054611114908261130a565b6001600160a01b03831660009081526006602052604090205560045461113a908261130a565b6004556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a88565b6000611188338484610569565b9392505050565b336000908152600260205260409020546001146111be5760405162461bcd60e51b81526004016105ac90611669565b600080546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60055460ff16611307576005805460ff19166001908117909155600260006112183390565b6001600160a01b0316815260208082019290925260409081016000209290925581518083018352600a8152692222a327902a37b5b2b760b11b908201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fe6a74f83a1f09042d6e5aaa187770ca9f227a8f3d328d064ddda2f2a9fd5701f818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018490523060a0808301919091528351808303909101815260c090910190925281519101206009555b50565b60008261131783826116ec565b915081111561056357600080fd5b6000826113328382611703565b915081101561056357600080fd5b6113486113cf565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61139a611418565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113753390565b60005460ff166109d15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105ac565b60005460ff16156109d15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105ac565b600060208083528351808285015260005b8181101561148b5785810183015185820160400152820161146f565b8181111561149d576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461130757600080fd5b600080604083850312156114db57600080fd5b82356114e6816114b3565b946020939093013593505050565b60008060006060848603121561150957600080fd5b8335611514816114b3565b92506020840135611524816114b3565b929592945050506040919091013590565b60006020828403121561154757600080fd5b8135611188816114b3565b801515811461130757600080fd5b600080600080600080600080610100898b03121561157d57600080fd5b8835611588816114b3565b97506020890135611598816114b3565b9650604089013595506060890135945060808901356115b681611552565b935060a089013560ff811681146115cc57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b600080604083850312156115fc57600080fd5b8235611607816114b3565b9150602083013561161781611552565b809150509250929050565b6000806040838503121561163557600080fd5b8235611640816114b3565b91506020830135611617816114b3565b60006020828403121561166257600080fd5b5035919050565b60208082526018908201527f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000604082015260600190565b6000602082840312156116b257600080fd5b815161118881611552565b634e487b7160e01b600052601160045260246000fd5b6000600182016116e5576116e56116bd565b5060010190565b6000828210156116fe576116fe6116bd565b500390565b60008219821115611716576117166116bd565b50019056fea26469706673582212209560e9d3a050658b75548c2feebda54902590c4a71c97b3be98058656c9769fe64736f6c634300080f0033",
  "devdoc": {
    "author": "Decentralized Foundation Team",
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "decimals": {
        "details": "Returns the decimals places of the token."
      },
      "name": {
        "details": "Returns the name of the token."
      },
      "symbol": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "title": "DEFO Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 569,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 10397,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "transferLimiter",
        "offset": 1,
        "slot": "0",
        "type": "t_contract(ITransferLimiter)8876"
      },
      {
        "astId": 10401,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10405,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "wards",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10409,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "blacklist",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10423,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 10425,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "initialized",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 10429,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10435,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "allowance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 10439,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "nonces",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10441,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ITransferLimiter)8876": {
        "encoding": "inplace",
        "label": "contract ITransferLimiter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
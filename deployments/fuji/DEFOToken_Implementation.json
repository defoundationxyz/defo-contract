{
  "address": "0xF6A21D16De5cf2c8258a7C02A50a9B5CfAb4b2b4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLinkedDiamond",
      "outputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "_transferLimiter",
          "type": "address"
        }
      ],
      "name": "linkDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "recoverLostAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverLostDEFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allow",
          "type": "bool"
        }
      ],
      "name": "updateBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x070bd854b33f7f375372f79af8f9b2e1f34fcbeca3090184fb379fea4ce65ad7",
  "receipt": {
    "to": null,
    "from": "0xe6C77945dFb8148524C2794f025aC55f8d944C5E",
    "contractAddress": "0xF6A21D16De5cf2c8258a7C02A50a9B5CfAb4b2b4",
    "transactionIndex": 1,
    "gasUsed": "2825583",
    "logsBloom": "0x
    "blockHash": "0xa6d43ba89d9a2ba694c5347b79222f3f9166906a4485dd82b46d6a14a144e9f0",
    "transactionHash": "0x070bd854b33f7f375372f79af8f9b2e1f34fcbeca3090184fb379fea4ce65ad7",
    "logs": [],
    "blockNumber": 13217827,
    "cumulativeGasUsed": "2877427",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "43113"
  ],
  "numDeployments": 4,
  "solcInputHash": "5d5796690fa5faddefad33b82d62f550",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLinkedDiamond\",\"outputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"_transferLimiter\",\"type\":\"address\"}],\"name\":\"linkDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"recoverLostAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverLostDEFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Foundation Team\",\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals\":{\"details\":\"Returns the decimals places of the token.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"title\":\"DEFO Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/DEFOToken.sol\":\"DEFOToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ITransferLimiter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.15;\\n\\n/** @title  ILimiter, limiter for DEFO token transfer\\n  * @author Decentralized Foundation Team\\n*/\\n\\ninterface ITransferLimiter {\\n    function yieldGemTransferLimit(\\n        address to,\\n        address from,\\n        uint256 tokenId\\n    ) external;\\n\\n    function DEFOTokenTransferLimit(\\n        address to,\\n        address from,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa7741cdf7be9bb3980ef635519bf7eca4b51c951116f52735621b75c9314d278\",\"license\":\"GPL-3.0\"},\"contracts/token/DEFOToken.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"../interfaces/ITransferLimiter.sol\\\";\\n\\n/** @title  DEFO Token\\n  * @author Decentralized Foundation Team\\n  * @notice ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\\n*/\\n\\ncontract DEFOToken is Pausable, IERC20, IERC20Metadata {\\n    ITransferLimiter transferLimiter;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    // @notice Admins list\\n    mapping(address => uint256) public wards;\\n\\n    // @notice Blacklist\\n    mapping(address => bool) public blacklist;\\n\\n    // --- ERC20 Data ---\\n    string public constant name = \\\"DEFO Token\\\";\\n    string public constant symbol = \\\"DEFO\\\";\\n    string public constant version = \\\"1\\\";\\n    uint8 public constant decimals = 18;\\n    uint256 public totalSupply;\\n    bool public initialized;\\n\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    mapping(address => uint256) public nonces;\\n\\n\\n    // --- EIP712 niceties ---\\n    bytes32 public DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n\\n    /* ============ External and Public Functions ============ */\\n\\n    modifier auth() {\\n        require(wards[_msgSender()] == 1, \\\"DEFOToken:not-authorized\\\");\\n        _;\\n    }\\n\\n    constructor(uint256 chainId_) {\\n        wards[_msgSender()] = 1;\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(version)),\\n                chainId_,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    function initialize(uint256 chainId_) external {\\n        require(!initialized, \\\"DEFOToken:already-initialized\\\");\\n        initialized = true;\\n        wards[_msgSender()] = 1;\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(version)),\\n                chainId_,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    // --- Token ---\\n\\n    function transfer(address dst, uint256 wad) external returns (bool) {\\n        return transferFrom(_msgSender(), dst, wad);\\n    }\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public returns (bool) {\\n        require(!paused(), \\\"DEFOToken:paused\\\");\\n        require(balanceOf[src] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        require(!blacklist[src] && !blacklist[dst], \\\"DEFOToken:blacklisted\\\");\\n        if (wards[_msgSender()] != 1 && address(transferLimiter) != address(0))\\n            transferLimiter.DEFOTokenTransferLimit(src, dst, wad);\\n        if (src != _msgSender() && allowance[src][_msgSender()] != type(uint256).max) {\\n            require(allowance[src][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[src][_msgSender()] = sub(allowance[src][_msgSender()], wad);\\n        }\\n        balanceOf[src] = sub(balanceOf[src], wad);\\n        balanceOf[dst] = add(balanceOf[dst], wad);\\n        emit Transfer(src, dst, wad);\\n        return true;\\n    }\\n\\n\\n    function burn(address usr, uint256 wad) external {\\n        require(balanceOf[usr] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        if (usr != _msgSender() && allowance[usr][_msgSender()] != type(uint256).max) {\\n            require(allowance[usr][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[usr][_msgSender()] = sub(allowance[usr][_msgSender()], wad);\\n        }\\n        balanceOf[usr] = sub(balanceOf[usr], wad);\\n        totalSupply = sub(totalSupply, wad);\\n        emit Transfer(usr, address(0), wad);\\n    }\\n\\n    function approve(address usr, uint256 wad) external returns (bool) {\\n        allowance[_msgSender()][usr] = wad;\\n        emit Approval(_msgSender(), usr, wad);\\n        return true;\\n    }\\n\\n    // --- Approve by signature ---\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed))\\n            )\\n        );\\n\\n        require(holder != address(0), \\\"DEFOToken:invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"DEFOToken:invalid-permit\\\");\\n        require(expiry == 0 || block.timestamp <= expiry, \\\"DEFOToken:permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"DEFOToken:invalid-nonce\\\");\\n        uint256 wad = allowed ? type(uint256).max : 0;\\n        allowance[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n\\n    /* ============ External and Public Admin Functions ============ */\\n\\n    function linkDiamond(ITransferLimiter _transferLimiter) external auth {\\n        transferLimiter = _transferLimiter;\\n    }\\n\\n    function mint(address usr, uint256 wad) external auth {\\n        balanceOf[usr] = add(balanceOf[usr], wad);\\n        totalSupply = add(totalSupply, wad);\\n        emit Transfer(address(0), usr, wad);\\n    }\\n\\n    // @notice Grant access\\n    // @param guy admin to grant auth\\n    function rely(address guy) external auth {\\n        wards[guy] = 1;\\n    }\\n\\n    // @notice Deny access\\n    // @param guy deny auth for\\n    function deny(address guy) external auth {\\n        wards[guy] = 0;\\n    }\\n\\n\\n    // Recovering lost tokens and avax\\n    function recoverLostDEFO(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) external auth {\\n        IERC20(_token).transfer(_to, _amount);\\n    }\\n\\n    function recoverLostAVAX(address _to) external auth {\\n        payable(_to).transfer(address(this).balance);\\n    }\\n\\n    function updateBlacklist(address _address, bool _allow) external auth {\\n        blacklist[_address] = _allow;\\n    }\\n\\n    function pause() external auth {\\n        _pause();\\n    }\\n\\n    function unpause() external auth {\\n        _unpause();\\n    }\\n\\n    function getLinkedDiamond() external view returns (ITransferLimiter) {\\n        return transferLimiter;\\n    }\\n\\n    /* ============ Internal Functions ============ */\\n\\n    // --- Math ---\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xef93b17bdb192b69fcf9d7c112afa375ed355eb80b8d8ee4f0b83b1f5f665a48\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003422380380620034228339818101604052810190620000379190620001c3565b60008060006101000a81548160ff021916908315150217905550600160026000620000676200017b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016200015895949392919062000266565b6040516020818303038152906040528051906020012060098190555050620002c3565b600033905090565b600080fd5b6000819050919050565b6200019d8162000188565b8114620001a957600080fd5b50565b600081519050620001bd8162000192565b92915050565b600060208284031215620001dc57620001db62000183565b5b6000620001ec84828501620001ac565b91505092915050565b6000819050919050565b6200020a81620001f5565b82525050565b6200021b8162000188565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200024e8262000221565b9050919050565b620002608162000241565b82525050565b600060a0820190506200027d6000830188620001ff565b6200028c6020830187620001ff565b6200029b6040830186620001ff565b620002aa606083018562000210565b620002b9608083018462000255565b9695505050505050565b61314f80620002d36000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063764abbe8116101045780639dc29fac116100a2578063dd62ed3e11610071578063dd62ed3e1461051d578063ec659a971461054d578063f9f92be41461056b578063fe4b84df1461059b576101da565b80639dc29fac14610485578063a9059cbb146104a1578063bf353dbb146104d1578063d356ee9d14610501576101da565b80638fcbaf0c116100de5780638fcbaf0c146104135780639155e0831461042f57806395d89b411461044b5780639c52a7f114610469576101da565b8063764abbe8146103bd5780637ecebe00146103d95780638456cb5914610409576101da565b80633644e5151161017c57806354fd4d501161014b57806354fd4d50146103355780635c975abb1461035357806365fae35e1461037157806370a082311461038d576101da565b80633644e515146102d5578063395086fb146102f35780633f4ba83a1461030f57806340c10f1914610319576101da565b806318160ddd116101b857806318160ddd1461024b57806323b872dd1461026957806330adf81f14610299578063313ce567146102b7576101da565b806306fdde03146101df578063095ea7b3146101fd578063158ef93e1461022d575b600080fd5b6101e76105b7565b6040516101f49190612382565b60405180910390f35b6102176004803603810190610212919061243d565b6105f0565b6040516102249190612498565b60405180910390f35b6102356106f0565b6040516102429190612498565b60405180910390f35b610253610703565b60405161026091906124c2565b60405180910390f35b610283600480360381019061027e91906124dd565b610709565b6040516102909190612498565b60405180910390f35b6102a1610e43565b6040516102ae9190612549565b60405180910390f35b6102bf610e6a565b6040516102cc9190612580565b60405180910390f35b6102dd610e6f565b6040516102ea9190612549565b60405180910390f35b61030d6004803603810190610308919061259b565b610e75565b005b610317610f48565b005b610333600480360381019061032e919061243d565b610fdb565b005b61033d61116c565b60405161034a9190612382565b60405180910390f35b61035b6111a5565b6040516103689190612498565b60405180910390f35b61038b6004803603810190610386919061259b565b6111bb565b005b6103a760048036038101906103a2919061259b565b61128c565b6040516103b491906124c2565b60405180910390f35b6103d760048036038101906103d291906124dd565b6112a4565b005b6103f360048036038101906103ee919061259b565b6113b1565b60405161040091906124c2565b60405180910390f35b6104116113c9565b005b61042d6004803603810190610428919061264c565b61145c565b005b61044960048036038101906104449190612702565b611810565b005b6104536118f4565b6040516104609190612382565b60405180910390f35b610483600480360381019061047e919061259b565b61192d565b005b61049f600480360381019061049a919061243d565b6119fe565b005b6104bb60048036038101906104b6919061243d565b611e4e565b6040516104c89190612498565b60405180910390f35b6104eb60048036038101906104e6919061259b565b611e6a565b6040516104f891906124c2565b60405180910390f35b61051b60048036038101906105169190612780565b611e82565b005b610537600480360381019061053291906127ad565b611f4f565b60405161054491906124c2565b60405180910390f35b610555611f74565b604051610562919061284c565b60405180910390f35b6105856004803603810190610580919061259b565b611f9d565b6040516105929190612498565b60405180910390f35b6105b560048036038101906105b09190612867565b611fbd565b005b6040518060400160405280600a81526020017f4445464f20546f6b656e0000000000000000000000000000000000000000000081525081565b600081600760006105ff612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16610699612144565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106de91906124c2565b60405180910390a36001905092915050565b600560009054906101000a900460ff1681565b60045481565b60006107136111a5565b15610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a906128e0565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc9061294c565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108795750600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b6108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906129b8565b60405180910390fd5b6001600260006108c6612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415801561095e5750600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156109f557600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfc044388585856040518463ffffffff1660e01b81526004016109c2939291906129e7565b600060405180830381600087803b1580156109dc57600080fd5b505af11580156109f0573d6000803e3d6000fd5b505050505b6109fd612144565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610adb57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a9d612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610cbb5781600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b2a612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d90612a6a565b60405180910390fd5b610c33600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bf2612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361214c565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c7c612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610d04600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361214c565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d90600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361216f565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3091906124c2565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60095481565b600160026000610e83612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef590612ad6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f44573d6000803e3d6000fd5b5050565b600160026000610f56612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc890612ad6565b60405180910390fd5b610fd9612192565b565b600160026000610fe9612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90612ad6565b60405180910390fd5b6110ad600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261216f565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110fc6004548261216f565b6004819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161116091906124c2565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60008060009054906101000a900460ff16905090565b6001600260006111c9612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90612ad6565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60066020528060005260406000206000915090505481565b6001600260006112b2612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461132d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132490612ad6565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611368929190612af6565b6020604051808303816000875af1158015611387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ab9190612b34565b50505050565b60086020528060005260406000206000915090505481565b6001600260006113d7612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990612ad6565b60405180910390fd5b61145a6121f4565b565b60006009547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a60405160200161149f96959493929190612b61565b604051602081830303815290604052805190602001206040516020016114c6929190612c3a565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154490612cbd565b60405180910390fd5b600181858585604051600081526020016040526040516115709493929190612cdd565b6020604051602081039080840390855afa158015611592573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160090612d6e565b60405180910390fd5b60008614806116185750854211155b611657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164e90612dda565b60405180910390fd5b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906116a790612e29565b9190505587146116ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e390612ebd565b60405180910390fd5b6000856116fa57600061171c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516117fc91906124c2565b60405180910390a350505050505050505050565b60016002600061181e612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189090612ad6565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060400160405280600481526020017f4445464f0000000000000000000000000000000000000000000000000000000081525081565b60016002600061193b612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146119b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ad90612ad6565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a779061294c565b60405180910390fd5b611a88612144565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611b6657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611b28612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611d465780600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611bb5612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612a6a565b60405180910390fd5b611cbe600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611c7d612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261214c565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611d07612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d8f600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261214c565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611dde6004548261214c565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e4291906124c2565b60405180910390a35050565b6000611e62611e5b612144565b8484610709565b905092915050565b60026020528060005260406000206000915090505481565b600160026000611e90612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0290612ad6565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b600560009054906101000a900460ff161561200d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200490612f29565b60405180910390fd5b6001600560006101000a81548160ff021916908315150217905550600160026000612036612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001612125959493929190612f49565b6040516020818303038152906040528051906020012060098190555050565b600033905090565b600082828461215b9190612f9c565b915081111561216957600080fd5b92915050565b600082828461217e9190612fd0565b915081101561218c57600080fd5b92915050565b61219a612256565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6121dd612144565b6040516121ea9190613026565b60405180910390a1565b6121fc61229f565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861223f612144565b60405161224c9190613026565b60405180910390a1565b61225e6111a5565b61229d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122949061308d565b60405180910390fd5b565b6122a76111a5565b156122e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122de906130f9565b60405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b83811015612323578082015181840152602081019050612308565b83811115612332576000848401525b50505050565b6000601f19601f8301169050919050565b6000612354826122e9565b61235e81856122f4565b935061236e818560208601612305565b61237781612338565b840191505092915050565b6000602082019050818103600083015261239c8184612349565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123d4826123a9565b9050919050565b6123e4816123c9565b81146123ef57600080fd5b50565b600081359050612401816123db565b92915050565b6000819050919050565b61241a81612407565b811461242557600080fd5b50565b60008135905061243781612411565b92915050565b60008060408385031215612454576124536123a4565b5b6000612462858286016123f2565b925050602061247385828601612428565b9150509250929050565b60008115159050919050565b6124928161247d565b82525050565b60006020820190506124ad6000830184612489565b92915050565b6124bc81612407565b82525050565b60006020820190506124d760008301846124b3565b92915050565b6000806000606084860312156124f6576124f56123a4565b5b6000612504868287016123f2565b9350506020612515868287016123f2565b925050604061252686828701612428565b9150509250925092565b6000819050919050565b61254381612530565b82525050565b600060208201905061255e600083018461253a565b92915050565b600060ff82169050919050565b61257a81612564565b82525050565b60006020820190506125956000830184612571565b92915050565b6000602082840312156125b1576125b06123a4565b5b60006125bf848285016123f2565b91505092915050565b6125d18161247d565b81146125dc57600080fd5b50565b6000813590506125ee816125c8565b92915050565b6125fd81612564565b811461260857600080fd5b50565b60008135905061261a816125f4565b92915050565b61262981612530565b811461263457600080fd5b50565b60008135905061264681612620565b92915050565b600080600080600080600080610100898b03121561266d5761266c6123a4565b5b600061267b8b828c016123f2565b985050602061268c8b828c016123f2565b975050604061269d8b828c01612428565b96505060606126ae8b828c01612428565b95505060806126bf8b828c016125df565b94505060a06126d08b828c0161260b565b93505060c06126e18b828c01612637565b92505060e06126f28b828c01612637565b9150509295985092959890939650565b60008060408385031215612719576127186123a4565b5b6000612727858286016123f2565b9250506020612738858286016125df565b9150509250929050565b600061274d826123c9565b9050919050565b61275d81612742565b811461276857600080fd5b50565b60008135905061277a81612754565b92915050565b600060208284031215612796576127956123a4565b5b60006127a48482850161276b565b91505092915050565b600080604083850312156127c4576127c36123a4565b5b60006127d2858286016123f2565b92505060206127e3858286016123f2565b9150509250929050565b6000819050919050565b600061281261280d612808846123a9565b6127ed565b6123a9565b9050919050565b6000612824826127f7565b9050919050565b600061283682612819565b9050919050565b6128468161282b565b82525050565b6000602082019050612861600083018461283d565b92915050565b60006020828403121561287d5761287c6123a4565b5b600061288b84828501612428565b91505092915050565b7f4445464f546f6b656e3a70617573656400000000000000000000000000000000600082015250565b60006128ca6010836122f4565b91506128d582612894565b602082019050919050565b600060208201905081810360008301526128f9816128bd565b9050919050565b7f4445464f546f6b656e3a696e73756666696369656e742d62616c616e63650000600082015250565b6000612936601e836122f4565b915061294182612900565b602082019050919050565b6000602082019050818103600083015261296581612929565b9050919050565b7f4445464f546f6b656e3a626c61636b6c69737465640000000000000000000000600082015250565b60006129a26015836122f4565b91506129ad8261296c565b602082019050919050565b600060208201905081810360008301526129d181612995565b9050919050565b6129e1816123c9565b82525050565b60006060820190506129fc60008301866129d8565b612a0960208301856129d8565b612a1660408301846124b3565b949350505050565b7f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e6365600082015250565b6000612a546020836122f4565b9150612a5f82612a1e565b602082019050919050565b60006020820190508181036000830152612a8381612a47565b9050919050565b7f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000600082015250565b6000612ac06018836122f4565b9150612acb82612a8a565b602082019050919050565b60006020820190508181036000830152612aef81612ab3565b9050919050565b6000604082019050612b0b60008301856129d8565b612b1860208301846124b3565b9392505050565b600081519050612b2e816125c8565b92915050565b600060208284031215612b4a57612b496123a4565b5b6000612b5884828501612b1f565b91505092915050565b600060c082019050612b76600083018961253a565b612b8360208301886129d8565b612b9060408301876129d8565b612b9d60608301866124b3565b612baa60808301856124b3565b612bb760a0830184612489565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c03600283612bc2565b9150612c0e82612bcd565b600282019050919050565b6000819050919050565b612c34612c2f82612530565b612c19565b82525050565b6000612c4582612bf6565b9150612c518285612c23565b602082019150612c618284612c23565b6020820191508190509392505050565b7f4445464f546f6b656e3a696e76616c69642d616464726573732d300000000000600082015250565b6000612ca7601b836122f4565b9150612cb282612c71565b602082019050919050565b60006020820190508181036000830152612cd681612c9a565b9050919050565b6000608082019050612cf2600083018761253a565b612cff6020830186612571565b612d0c604083018561253a565b612d19606083018461253a565b95945050505050565b7f4445464f546f6b656e3a696e76616c69642d7065726d69740000000000000000600082015250565b6000612d586018836122f4565b9150612d6382612d22565b602082019050919050565b60006020820190508181036000830152612d8781612d4b565b9050919050565b7f4445464f546f6b656e3a7065726d69742d657870697265640000000000000000600082015250565b6000612dc46018836122f4565b9150612dcf82612d8e565b602082019050919050565b60006020820190508181036000830152612df381612db7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e3482612407565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e6657612e65612dfa565b5b600182019050919050565b7f4445464f546f6b656e3a696e76616c69642d6e6f6e6365000000000000000000600082015250565b6000612ea76017836122f4565b9150612eb282612e71565b602082019050919050565b60006020820190508181036000830152612ed681612e9a565b9050919050565b7f4445464f546f6b656e3a616c72656164792d696e697469616c697a6564000000600082015250565b6000612f13601d836122f4565b9150612f1e82612edd565b602082019050919050565b60006020820190508181036000830152612f4281612f06565b9050919050565b600060a082019050612f5e600083018861253a565b612f6b602083018761253a565b612f78604083018661253a565b612f8560608301856124b3565b612f9260808301846129d8565b9695505050505050565b6000612fa782612407565b9150612fb283612407565b925082821015612fc557612fc4612dfa565b5b828203905092915050565b6000612fdb82612407565b9150612fe683612407565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561301b5761301a612dfa565b5b828201905092915050565b600060208201905061303b60008301846129d8565b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006130776014836122f4565b915061308282613041565b602082019050919050565b600060208201905081810360008301526130a68161306a565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006130e36010836122f4565b91506130ee826130ad565b602082019050919050565b60006020820190508181036000830152613112816130d6565b905091905056fea26469706673582212205cfe85771a3483480a73ba82b2eb4e1bcfe649553e64986be2cbc89078233eb464736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063764abbe8116101045780639dc29fac116100a2578063dd62ed3e11610071578063dd62ed3e1461051d578063ec659a971461054d578063f9f92be41461056b578063fe4b84df1461059b576101da565b80639dc29fac14610485578063a9059cbb146104a1578063bf353dbb146104d1578063d356ee9d14610501576101da565b80638fcbaf0c116100de5780638fcbaf0c146104135780639155e0831461042f57806395d89b411461044b5780639c52a7f114610469576101da565b8063764abbe8146103bd5780637ecebe00146103d95780638456cb5914610409576101da565b80633644e5151161017c57806354fd4d501161014b57806354fd4d50146103355780635c975abb1461035357806365fae35e1461037157806370a082311461038d576101da565b80633644e515146102d5578063395086fb146102f35780633f4ba83a1461030f57806340c10f1914610319576101da565b806318160ddd116101b857806318160ddd1461024b57806323b872dd1461026957806330adf81f14610299578063313ce567146102b7576101da565b806306fdde03146101df578063095ea7b3146101fd578063158ef93e1461022d575b600080fd5b6101e76105b7565b6040516101f49190612382565b60405180910390f35b6102176004803603810190610212919061243d565b6105f0565b6040516102249190612498565b60405180910390f35b6102356106f0565b6040516102429190612498565b60405180910390f35b610253610703565b60405161026091906124c2565b60405180910390f35b610283600480360381019061027e91906124dd565b610709565b6040516102909190612498565b60405180910390f35b6102a1610e43565b6040516102ae9190612549565b60405180910390f35b6102bf610e6a565b6040516102cc9190612580565b60405180910390f35b6102dd610e6f565b6040516102ea9190612549565b60405180910390f35b61030d6004803603810190610308919061259b565b610e75565b005b610317610f48565b005b610333600480360381019061032e919061243d565b610fdb565b005b61033d61116c565b60405161034a9190612382565b60405180910390f35b61035b6111a5565b6040516103689190612498565b60405180910390f35b61038b6004803603810190610386919061259b565b6111bb565b005b6103a760048036038101906103a2919061259b565b61128c565b6040516103b491906124c2565b60405180910390f35b6103d760048036038101906103d291906124dd565b6112a4565b005b6103f360048036038101906103ee919061259b565b6113b1565b60405161040091906124c2565b60405180910390f35b6104116113c9565b005b61042d6004803603810190610428919061264c565b61145c565b005b61044960048036038101906104449190612702565b611810565b005b6104536118f4565b6040516104609190612382565b60405180910390f35b610483600480360381019061047e919061259b565b61192d565b005b61049f600480360381019061049a919061243d565b6119fe565b005b6104bb60048036038101906104b6919061243d565b611e4e565b6040516104c89190612498565b60405180910390f35b6104eb60048036038101906104e6919061259b565b611e6a565b6040516104f891906124c2565b60405180910390f35b61051b60048036038101906105169190612780565b611e82565b005b610537600480360381019061053291906127ad565b611f4f565b60405161054491906124c2565b60405180910390f35b610555611f74565b604051610562919061284c565b60405180910390f35b6105856004803603810190610580919061259b565b611f9d565b6040516105929190612498565b60405180910390f35b6105b560048036038101906105b09190612867565b611fbd565b005b6040518060400160405280600a81526020017f4445464f20546f6b656e0000000000000000000000000000000000000000000081525081565b600081600760006105ff612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16610699612144565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106de91906124c2565b60405180910390a36001905092915050565b600560009054906101000a900460ff1681565b60045481565b60006107136111a5565b15610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a906128e0565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc9061294c565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108795750600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b6108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906129b8565b60405180910390fd5b6001600260006108c6612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415801561095e5750600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156109f557600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfc044388585856040518463ffffffff1660e01b81526004016109c2939291906129e7565b600060405180830381600087803b1580156109dc57600080fd5b505af11580156109f0573d6000803e3d6000fd5b505050505b6109fd612144565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610adb57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a9d612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610cbb5781600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b2a612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d90612a6a565b60405180910390fd5b610c33600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bf2612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361214c565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c7c612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610d04600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361214c565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d90600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361216f565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3091906124c2565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60095481565b600160026000610e83612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef590612ad6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610f44573d6000803e3d6000fd5b5050565b600160026000610f56612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc890612ad6565b60405180910390fd5b610fd9612192565b565b600160026000610fe9612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b90612ad6565b60405180910390fd5b6110ad600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261216f565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110fc6004548261216f565b6004819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161116091906124c2565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60008060009054906101000a900460ff16905090565b6001600260006111c9612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123b90612ad6565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60066020528060005260406000206000915090505481565b6001600260006112b2612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461132d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132490612ad6565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611368929190612af6565b6020604051808303816000875af1158015611387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ab9190612b34565b50505050565b60086020528060005260406000206000915090505481565b6001600260006113d7612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990612ad6565b60405180910390fd5b61145a6121f4565b565b60006009547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a60405160200161149f96959493929190612b61565b604051602081830303815290604052805190602001206040516020016114c6929190612c3a565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154490612cbd565b60405180910390fd5b600181858585604051600081526020016040526040516115709493929190612cdd565b6020604051602081039080840390855afa158015611592573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160090612d6e565b60405180910390fd5b60008614806116185750854211155b611657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164e90612dda565b60405180910390fd5b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906116a790612e29565b9190505587146116ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e390612ebd565b60405180910390fd5b6000856116fa57600061171c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516117fc91906124c2565b60405180910390a350505050505050505050565b60016002600061181e612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189090612ad6565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060400160405280600481526020017f4445464f0000000000000000000000000000000000000000000000000000000081525081565b60016002600061193b612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146119b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ad90612ad6565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a779061294c565b60405180910390fd5b611a88612144565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611b6657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611b28612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611d465780600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611bb5612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2890612a6a565b60405180910390fd5b611cbe600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611c7d612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261214c565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611d07612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d8f600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261214c565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611dde6004548261214c565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e4291906124c2565b60405180910390a35050565b6000611e62611e5b612144565b8484610709565b905092915050565b60026020528060005260406000206000915090505481565b600160026000611e90612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0290612ad6565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b600560009054906101000a900460ff161561200d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161200490612f29565b60405180910390fd5b6001600560006101000a81548160ff021916908315150217905550600160026000612036612144565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001612125959493929190612f49565b6040516020818303038152906040528051906020012060098190555050565b600033905090565b600082828461215b9190612f9c565b915081111561216957600080fd5b92915050565b600082828461217e9190612fd0565b915081101561218c57600080fd5b92915050565b61219a612256565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6121dd612144565b6040516121ea9190613026565b60405180910390a1565b6121fc61229f565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861223f612144565b60405161224c9190613026565b60405180910390a1565b61225e6111a5565b61229d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122949061308d565b60405180910390fd5b565b6122a76111a5565b156122e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122de906130f9565b60405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b83811015612323578082015181840152602081019050612308565b83811115612332576000848401525b50505050565b6000601f19601f8301169050919050565b6000612354826122e9565b61235e81856122f4565b935061236e818560208601612305565b61237781612338565b840191505092915050565b6000602082019050818103600083015261239c8184612349565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123d4826123a9565b9050919050565b6123e4816123c9565b81146123ef57600080fd5b50565b600081359050612401816123db565b92915050565b6000819050919050565b61241a81612407565b811461242557600080fd5b50565b60008135905061243781612411565b92915050565b60008060408385031215612454576124536123a4565b5b6000612462858286016123f2565b925050602061247385828601612428565b9150509250929050565b60008115159050919050565b6124928161247d565b82525050565b60006020820190506124ad6000830184612489565b92915050565b6124bc81612407565b82525050565b60006020820190506124d760008301846124b3565b92915050565b6000806000606084860312156124f6576124f56123a4565b5b6000612504868287016123f2565b9350506020612515868287016123f2565b925050604061252686828701612428565b9150509250925092565b6000819050919050565b61254381612530565b82525050565b600060208201905061255e600083018461253a565b92915050565b600060ff82169050919050565b61257a81612564565b82525050565b60006020820190506125956000830184612571565b92915050565b6000602082840312156125b1576125b06123a4565b5b60006125bf848285016123f2565b91505092915050565b6125d18161247d565b81146125dc57600080fd5b50565b6000813590506125ee816125c8565b92915050565b6125fd81612564565b811461260857600080fd5b50565b60008135905061261a816125f4565b92915050565b61262981612530565b811461263457600080fd5b50565b60008135905061264681612620565b92915050565b600080600080600080600080610100898b03121561266d5761266c6123a4565b5b600061267b8b828c016123f2565b985050602061268c8b828c016123f2565b975050604061269d8b828c01612428565b96505060606126ae8b828c01612428565b95505060806126bf8b828c016125df565b94505060a06126d08b828c0161260b565b93505060c06126e18b828c01612637565b92505060e06126f28b828c01612637565b9150509295985092959890939650565b60008060408385031215612719576127186123a4565b5b6000612727858286016123f2565b9250506020612738858286016125df565b9150509250929050565b600061274d826123c9565b9050919050565b61275d81612742565b811461276857600080fd5b50565b60008135905061277a81612754565b92915050565b600060208284031215612796576127956123a4565b5b60006127a48482850161276b565b91505092915050565b600080604083850312156127c4576127c36123a4565b5b60006127d2858286016123f2565b92505060206127e3858286016123f2565b9150509250929050565b6000819050919050565b600061281261280d612808846123a9565b6127ed565b6123a9565b9050919050565b6000612824826127f7565b9050919050565b600061283682612819565b9050919050565b6128468161282b565b82525050565b6000602082019050612861600083018461283d565b92915050565b60006020828403121561287d5761287c6123a4565b5b600061288b84828501612428565b91505092915050565b7f4445464f546f6b656e3a70617573656400000000000000000000000000000000600082015250565b60006128ca6010836122f4565b91506128d582612894565b602082019050919050565b600060208201905081810360008301526128f9816128bd565b9050919050565b7f4445464f546f6b656e3a696e73756666696369656e742d62616c616e63650000600082015250565b6000612936601e836122f4565b915061294182612900565b602082019050919050565b6000602082019050818103600083015261296581612929565b9050919050565b7f4445464f546f6b656e3a626c61636b6c69737465640000000000000000000000600082015250565b60006129a26015836122f4565b91506129ad8261296c565b602082019050919050565b600060208201905081810360008301526129d181612995565b9050919050565b6129e1816123c9565b82525050565b60006060820190506129fc60008301866129d8565b612a0960208301856129d8565b612a1660408301846124b3565b949350505050565b7f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e6365600082015250565b6000612a546020836122f4565b9150612a5f82612a1e565b602082019050919050565b60006020820190508181036000830152612a8381612a47565b9050919050565b7f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000600082015250565b6000612ac06018836122f4565b9150612acb82612a8a565b602082019050919050565b60006020820190508181036000830152612aef81612ab3565b9050919050565b6000604082019050612b0b60008301856129d8565b612b1860208301846124b3565b9392505050565b600081519050612b2e816125c8565b92915050565b600060208284031215612b4a57612b496123a4565b5b6000612b5884828501612b1f565b91505092915050565b600060c082019050612b76600083018961253a565b612b8360208301886129d8565b612b9060408301876129d8565b612b9d60608301866124b3565b612baa60808301856124b3565b612bb760a0830184612489565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c03600283612bc2565b9150612c0e82612bcd565b600282019050919050565b6000819050919050565b612c34612c2f82612530565b612c19565b82525050565b6000612c4582612bf6565b9150612c518285612c23565b602082019150612c618284612c23565b6020820191508190509392505050565b7f4445464f546f6b656e3a696e76616c69642d616464726573732d300000000000600082015250565b6000612ca7601b836122f4565b9150612cb282612c71565b602082019050919050565b60006020820190508181036000830152612cd681612c9a565b9050919050565b6000608082019050612cf2600083018761253a565b612cff6020830186612571565b612d0c604083018561253a565b612d19606083018461253a565b95945050505050565b7f4445464f546f6b656e3a696e76616c69642d7065726d69740000000000000000600082015250565b6000612d586018836122f4565b9150612d6382612d22565b602082019050919050565b60006020820190508181036000830152612d8781612d4b565b9050919050565b7f4445464f546f6b656e3a7065726d69742d657870697265640000000000000000600082015250565b6000612dc46018836122f4565b9150612dcf82612d8e565b602082019050919050565b60006020820190508181036000830152612df381612db7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e3482612407565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e6657612e65612dfa565b5b600182019050919050565b7f4445464f546f6b656e3a696e76616c69642d6e6f6e6365000000000000000000600082015250565b6000612ea76017836122f4565b9150612eb282612e71565b602082019050919050565b60006020820190508181036000830152612ed681612e9a565b9050919050565b7f4445464f546f6b656e3a616c72656164792d696e697469616c697a6564000000600082015250565b6000612f13601d836122f4565b9150612f1e82612edd565b602082019050919050565b60006020820190508181036000830152612f4281612f06565b9050919050565b600060a082019050612f5e600083018861253a565b612f6b602083018761253a565b612f78604083018661253a565b612f8560608301856124b3565b612f9260808301846129d8565b9695505050505050565b6000612fa782612407565b9150612fb283612407565b925082821015612fc557612fc4612dfa565b5b828203905092915050565b6000612fdb82612407565b9150612fe683612407565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561301b5761301a612dfa565b5b828201905092915050565b600060208201905061303b60008301846129d8565b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006130776014836122f4565b915061308282613041565b602082019050919050565b600060208201905081810360008301526130a68161306a565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006130e36010836122f4565b91506130ee826130ad565b602082019050919050565b60006020820190508181036000830152613112816130d6565b905091905056fea26469706673582212205cfe85771a3483480a73ba82b2eb4e1bcfe649553e64986be2cbc89078233eb464736f6c634300080f0033",
  "devdoc": {
    "author": "Decentralized Foundation Team",
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "decimals": {
        "details": "Returns the decimals places of the token."
      },
      "name": {
        "details": "Returns the name of the token."
      },
      "symbol": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "title": "DEFO Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 270,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "transferLimiter",
        "offset": 1,
        "slot": "0",
        "type": "t_contract(ITransferLimiter)254"
      },
      {
        "astId": 274,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 278,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "wards",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 282,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "blacklist",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 296,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 298,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "initialized",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 302,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 308,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "allowance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 312,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "nonces",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 314,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ITransferLimiter)254": {
        "encoding": "inplace",
        "label": "contract ITransferLimiter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0xd51533e248cf857b48Db9a849a67BEC0Fd2c8268",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "_transferLimiter",
          "type": "address"
        }
      ],
      "name": "linkDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "recoverLostAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverLostDEFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allow",
          "type": "bool"
        }
      ],
      "name": "updateBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9d10dc57d0b95f5252aae598af209a1ba45477b4af9b1ef7ec002371f2677600",
  "receipt": {
    "to": null,
    "from": "0xe6C77945dFb8148524C2794f025aC55f8d944C5E",
    "contractAddress": "0xd51533e248cf857b48Db9a849a67BEC0Fd2c8268",
    "transactionIndex": 3,
    "gasUsed": "2722619",
    "logsBloom": "0x
    "blockHash": "0x6bfa9423e3efad27c235d924af95b24d0eb2a2dc376a3b01cdf1aeb850943774",
    "transactionHash": "0x9d10dc57d0b95f5252aae598af209a1ba45477b4af9b1ef7ec002371f2677600",
    "logs": [],
    "blockNumber": 12999534,
    "cumulativeGasUsed": "2980826",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "43113"
  ],
  "numDeployments": 2,
  "solcInputHash": "9f2e0b1408423b80fe03c73f0be865b7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"_transferLimiter\",\"type\":\"address\"}],\"name\":\"linkDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"recoverLostAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverLostDEFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Foundation Team\",\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals\":{\"details\":\"Returns the decimals places of the token.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"title\":\"DEFO Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/DEFOToken.sol\":\"DEFOToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ITransferLimiter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.15;\\n\\n/** @title  ILimiter, limiter for DEFO token transfer\\n  * @author Decentralized Foundation Team\\n*/\\n\\ninterface ITransferLimiter {\\n    function yieldGemTransferLimit(\\n        address to,\\n        address from,\\n        uint256 tokenId\\n    ) external;\\n\\n    function DEFOTokenTransferLimit(\\n        address to,\\n        address from,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa7741cdf7be9bb3980ef635519bf7eca4b51c951116f52735621b75c9314d278\",\"license\":\"GPL-3.0\"},\"contracts/token/DEFOToken.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"../interfaces/ITransferLimiter.sol\\\";\\n\\n/** @title  DEFO Token\\n  * @author Decentralized Foundation Team\\n  * @notice ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\\n*/\\n\\ncontract DEFOToken is Pausable, IERC20, IERC20Metadata {\\n    ITransferLimiter transferLimiter;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    // @notice Admins list\\n    mapping(address => uint256) public wards;\\n\\n    // @notice Blacklist\\n    mapping(address => bool) public blacklist;\\n\\n    // --- ERC20 Data ---\\n    string public constant name = \\\"DEFO Token\\\";\\n    string public constant symbol = \\\"DEFO\\\";\\n    string public constant version = \\\"1\\\";\\n    uint8 public constant decimals = 18;\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    mapping(address => uint256) public nonces;\\n\\n\\n    // --- EIP712 niceties ---\\n    bytes32 public DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n\\n    /* ============ External and Public Functions ============ */\\n\\n    modifier auth() {\\n        require(wards[_msgSender()] == 1, \\\"DEFOToken:not-authorized\\\");\\n        _;\\n    }\\n\\n    constructor(uint256 chainId_) {\\n        wards[_msgSender()] = 1;\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(version)),\\n                chainId_,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    function initialize(uint256 chainId_) external {\\n        wards[_msgSender()] = 1;\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(version)),\\n                chainId_,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    // --- Token ---\\n\\n    function transfer(address dst, uint256 wad) external returns (bool) {\\n        return transferFrom(_msgSender(), dst, wad);\\n    }\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public returns (bool) {\\n        require(!paused(), \\\"DEFOToken:paused\\\");\\n        require(balanceOf[src] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        require(!blacklist[src] && !blacklist[dst], \\\"DEFOToken:blacklisted\\\");\\n        if (wards[_msgSender()] != 1 && address(transferLimiter) != address(0))\\n            transferLimiter.DEFOTokenTransferLimit(src, dst, wad);\\n        if (src != _msgSender() && allowance[src][_msgSender()] != type(uint256).max) {\\n            require(allowance[src][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[src][_msgSender()] = sub(allowance[src][_msgSender()], wad);\\n        }\\n        balanceOf[src] = sub(balanceOf[src], wad);\\n        balanceOf[dst] = add(balanceOf[dst], wad);\\n        emit Transfer(src, dst, wad);\\n        return true;\\n    }\\n\\n\\n    function burn(address usr, uint256 wad) external {\\n        require(balanceOf[usr] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        if (usr != _msgSender() && allowance[usr][_msgSender()] != type(uint256).max) {\\n            require(allowance[usr][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[usr][_msgSender()] = sub(allowance[usr][_msgSender()], wad);\\n        }\\n        balanceOf[usr] = sub(balanceOf[usr], wad);\\n        totalSupply = sub(totalSupply, wad);\\n        emit Transfer(usr, address(0), wad);\\n    }\\n\\n    function approve(address usr, uint256 wad) external returns (bool) {\\n        allowance[_msgSender()][usr] = wad;\\n        emit Approval(_msgSender(), usr, wad);\\n        return true;\\n    }\\n\\n    // --- Approve by signature ---\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed))\\n            )\\n        );\\n\\n        require(holder != address(0), \\\"DEFOToken:invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"DEFOToken:invalid-permit\\\");\\n        require(expiry == 0 || block.timestamp <= expiry, \\\"DEFOToken:permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"DEFOToken:invalid-nonce\\\");\\n        uint256 wad = allowed ? type(uint256).max : 0;\\n        allowance[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n\\n    /* ============ External and Public Admin Functions ============ */\\n\\n    function linkDiamond(ITransferLimiter _transferLimiter) external auth {\\n        transferLimiter = _transferLimiter;\\n    }\\n\\n    function mint(address usr, uint256 wad) external auth {\\n        balanceOf[usr] = add(balanceOf[usr], wad);\\n        totalSupply = add(totalSupply, wad);\\n        emit Transfer(address(0), usr, wad);\\n    }\\n\\n    // @notice Grant access\\n    // @param guy admin to grant auth\\n    function rely(address guy) external auth {\\n        wards[guy] = 1;\\n    }\\n\\n    // @notice Deny access\\n    // @param guy deny auth for\\n    function deny(address guy) external auth {\\n        wards[guy] = 0;\\n    }\\n\\n\\n    // Recovering lost tokens and avax\\n    function recoverLostDEFO(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) external auth {\\n        IERC20(_token).transfer(_to, _amount);\\n    }\\n\\n    function recoverLostAVAX(address _to) external auth {\\n        payable(_to).transfer(address(this).balance);\\n    }\\n\\n    function updateBlacklist(address _address, bool _allow) external auth {\\n        blacklist[_address] = _allow;\\n    }\\n\\n    function pause() external auth {\\n        _pause();\\n    }\\n\\n    function unpause() external auth {\\n        _unpause();\\n    }\\n\\n    /* ============ Internal Functions ============ */\\n\\n    // --- Math ---\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6b311488647f92e2d9c2b0be743bfa8ded0f08f48e1715668b65fec7bd35183d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003243380380620032438339818101604052810190620000379190620001c3565b60008060006101000a81548160ff021916908315150217905550600160026000620000676200017b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016200015895949392919062000266565b6040516020818303038152906040528051906020012060088190555050620002c3565b600033905090565b600080fd5b6000819050919050565b6200019d8162000188565b8114620001a957600080fd5b50565b600081519050620001bd8162000192565b92915050565b600060208284031215620001dc57620001db62000183565b5b6000620001ec84828501620001ac565b91505092915050565b6000819050919050565b6200020a81620001f5565b82525050565b6200021b8162000188565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200024e8262000221565b9050919050565b620002608162000241565b82525050565b600060a0820190506200027d6000830188620001ff565b6200028c6020830187620001ff565b6200029b6040830186620001ff565b620002aa606083018562000210565b620002b9608083018462000255565b9695505050505050565b612f7080620002d36000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063764abbe8116100f95780639dc29fac11610097578063d356ee9d11610071578063d356ee9d146104cd578063dd62ed3e146104e9578063f9f92be414610519578063fe4b84df14610549576101c4565b80639dc29fac14610451578063a9059cbb1461046d578063bf353dbb1461049d576101c4565b80638fcbaf0c116100d35780638fcbaf0c146103df5780639155e083146103fb57806395d89b41146104175780639c52a7f114610435576101c4565b8063764abbe8146103895780637ecebe00146103a55780638456cb59146103d5576101c4565b8063395086fb1161016657806354fd4d501161014057806354fd4d50146103015780635c975abb1461031f57806365fae35e1461033d57806370a0823114610359576101c4565b8063395086fb146102bf5780633f4ba83a146102db57806340c10f19146102e5576101c4565b806323b872dd116101a257806323b872dd1461023557806330adf81f14610265578063313ce567146102835780633644e515146102a1576101c4565b806306fdde03146101c9578063095ea7b3146101e757806318160ddd14610217575b600080fd5b6101d1610565565b6040516101de9190612289565b60405180910390f35b61020160048036038101906101fc9190612344565b61059e565b60405161020e919061239f565b60405180910390f35b61021f61069e565b60405161022c91906123c9565b60405180910390f35b61024f600480360381019061024a91906123e4565b6106a4565b60405161025c919061239f565b60405180910390f35b61026d610dde565b60405161027a9190612450565b60405180910390f35b61028b610e05565b6040516102989190612487565b60405180910390f35b6102a9610e0a565b6040516102b69190612450565b60405180910390f35b6102d960048036038101906102d491906124a2565b610e10565b005b6102e3610ee3565b005b6102ff60048036038101906102fa9190612344565b610f76565b005b610309611107565b6040516103169190612289565b60405180910390f35b610327611140565b604051610334919061239f565b60405180910390f35b610357600480360381019061035291906124a2565b611156565b005b610373600480360381019061036e91906124a2565b611227565b60405161038091906123c9565b60405180910390f35b6103a3600480360381019061039e91906123e4565b61123f565b005b6103bf60048036038101906103ba91906124a2565b61134c565b6040516103cc91906123c9565b60405180910390f35b6103dd611364565b005b6103f960048036038101906103f49190612553565b6113f7565b005b61041560048036038101906104109190612609565b6117ab565b005b61041f61188f565b60405161042c9190612289565b60405180910390f35b61044f600480360381019061044a91906124a2565b6118c8565b005b61046b60048036038101906104669190612344565b611999565b005b61048760048036038101906104829190612344565b611de9565b604051610494919061239f565b60405180910390f35b6104b760048036038101906104b291906124a2565b611e05565b6040516104c491906123c9565b60405180910390f35b6104e760048036038101906104e29190612687565b611e1d565b005b61050360048036038101906104fe91906126b4565b611eea565b60405161051091906123c9565b60405180910390f35b610533600480360381019061052e91906124a2565b611f0f565b604051610540919061239f565b60405180910390f35b610563600480360381019061055e91906126f4565b611f2f565b005b6040518060400160405280600a81526020017f4445464f20546f6b656e0000000000000000000000000000000000000000000081525081565b600081600660006105ad61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1661064761204b565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161068c91906123c9565b60405180910390a36001905092915050565b60045481565b60006106ae611140565b156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e59061276d565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610770576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610767906127d9565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108145750600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a90612845565b60405180910390fd5b60016002600061086161204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156108f95750600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561099057600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfc044388585856040518463ffffffff1660e01b815260040161095d93929190612874565b600060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050505b61099861204b565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610a7657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a3861204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610c565781600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610ac561204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b38906128f7565b60405180910390fd5b610bce600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b8d61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612053565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c1761204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610c9f600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612053565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d2b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612076565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dcb91906123c9565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60085481565b600160026000610e1e61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9090612963565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610edf573d6000803e3d6000fd5b5050565b600160026000610ef161204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6390612963565b60405180910390fd5b610f74612099565b565b600160026000610f8461204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff690612963565b60405180910390fd5b611048600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612076565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109760045482612076565b6004819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110fb91906123c9565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60008060009054906101000a900460ff16905090565b60016002600061116461204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d690612963565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60056020528060005260406000206000915090505481565b60016002600061124d61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90612963565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611303929190612983565b6020604051808303816000875af1158015611322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134691906129c1565b50505050565b60076020528060005260406000206000915090505481565b60016002600061137261204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146113ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e490612963565b60405180910390fd5b6113f56120fb565b565b60006008547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a60405160200161143a969594939291906129ee565b60405160208183030381529060405280519060200120604051602001611461929190612ac7565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16036114e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114df90612b4a565b60405180910390fd5b6001818585856040516000815260200160405260405161150b9493929190612b6a565b6020604051602081039080840390855afa15801561152d573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b90612bfb565b60405180910390fd5b60008614806115b35750854211155b6115f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e990612c67565b60405180910390fd5b600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061164290612cb6565b919050558714611687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167e90612d4a565b60405180910390fd5b6000856116955760006116b7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161179791906123c9565b60405180910390a350505050505050505050565b6001600260006117b961204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182b90612963565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060400160405280600481526020017f4445464f0000000000000000000000000000000000000000000000000000000081525081565b6001600260006118d661204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194890612963565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a12906127d9565b60405180910390fd5b611a2361204b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611b0157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611ac361204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611ce15780600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611b5061204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc3906128f7565b60405180910390fd5b611c59600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611c1861204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612053565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611ca261204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d2a600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612053565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d7960045482612053565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ddd91906123c9565b60405180910390a35050565b6000611dfd611df661204b565b84846106a4565b905092915050565b60026020528060005260406000206000915090505481565b600160026000611e2b61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9d90612963565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6006602052816000526040600020602052806000526040600020600091509150505481565b60036020528060005260406000206000915054906101000a900460ff1681565b600160026000611f3d61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120833060405160200161202c959493929190612d6a565b6040516020818303038152906040528051906020012060088190555050565b600033905090565b60008282846120629190612dbd565b915081111561207057600080fd5b92915050565b60008282846120859190612df1565b915081101561209357600080fd5b92915050565b6120a161215d565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120e461204b565b6040516120f19190612e47565b60405180910390a1565b6121036121a6565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861214661204b565b6040516121539190612e47565b60405180910390a1565b612165611140565b6121a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219b90612eae565b60405180910390fd5b565b6121ae611140565b156121ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121e590612f1a565b60405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b8381101561222a57808201518184015260208101905061220f565b83811115612239576000848401525b50505050565b6000601f19601f8301169050919050565b600061225b826121f0565b61226581856121fb565b935061227581856020860161220c565b61227e8161223f565b840191505092915050565b600060208201905081810360008301526122a38184612250565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122db826122b0565b9050919050565b6122eb816122d0565b81146122f657600080fd5b50565b600081359050612308816122e2565b92915050565b6000819050919050565b6123218161230e565b811461232c57600080fd5b50565b60008135905061233e81612318565b92915050565b6000806040838503121561235b5761235a6122ab565b5b6000612369858286016122f9565b925050602061237a8582860161232f565b9150509250929050565b60008115159050919050565b61239981612384565b82525050565b60006020820190506123b46000830184612390565b92915050565b6123c38161230e565b82525050565b60006020820190506123de60008301846123ba565b92915050565b6000806000606084860312156123fd576123fc6122ab565b5b600061240b868287016122f9565b935050602061241c868287016122f9565b925050604061242d8682870161232f565b9150509250925092565b6000819050919050565b61244a81612437565b82525050565b60006020820190506124656000830184612441565b92915050565b600060ff82169050919050565b6124818161246b565b82525050565b600060208201905061249c6000830184612478565b92915050565b6000602082840312156124b8576124b76122ab565b5b60006124c6848285016122f9565b91505092915050565b6124d881612384565b81146124e357600080fd5b50565b6000813590506124f5816124cf565b92915050565b6125048161246b565b811461250f57600080fd5b50565b600081359050612521816124fb565b92915050565b61253081612437565b811461253b57600080fd5b50565b60008135905061254d81612527565b92915050565b600080600080600080600080610100898b031215612574576125736122ab565b5b60006125828b828c016122f9565b98505060206125938b828c016122f9565b97505060406125a48b828c0161232f565b96505060606125b58b828c0161232f565b95505060806125c68b828c016124e6565b94505060a06125d78b828c01612512565b93505060c06125e88b828c0161253e565b92505060e06125f98b828c0161253e565b9150509295985092959890939650565b600080604083850312156126205761261f6122ab565b5b600061262e858286016122f9565b925050602061263f858286016124e6565b9150509250929050565b6000612654826122d0565b9050919050565b61266481612649565b811461266f57600080fd5b50565b6000813590506126818161265b565b92915050565b60006020828403121561269d5761269c6122ab565b5b60006126ab84828501612672565b91505092915050565b600080604083850312156126cb576126ca6122ab565b5b60006126d9858286016122f9565b92505060206126ea858286016122f9565b9150509250929050565b60006020828403121561270a576127096122ab565b5b60006127188482850161232f565b91505092915050565b7f4445464f546f6b656e3a70617573656400000000000000000000000000000000600082015250565b60006127576010836121fb565b915061276282612721565b602082019050919050565b600060208201905081810360008301526127868161274a565b9050919050565b7f4445464f546f6b656e3a696e73756666696369656e742d62616c616e63650000600082015250565b60006127c3601e836121fb565b91506127ce8261278d565b602082019050919050565b600060208201905081810360008301526127f2816127b6565b9050919050565b7f4445464f546f6b656e3a626c61636b6c69737465640000000000000000000000600082015250565b600061282f6015836121fb565b915061283a826127f9565b602082019050919050565b6000602082019050818103600083015261285e81612822565b9050919050565b61286e816122d0565b82525050565b60006060820190506128896000830186612865565b6128966020830185612865565b6128a360408301846123ba565b949350505050565b7f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e6365600082015250565b60006128e16020836121fb565b91506128ec826128ab565b602082019050919050565b60006020820190508181036000830152612910816128d4565b9050919050565b7f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000600082015250565b600061294d6018836121fb565b915061295882612917565b602082019050919050565b6000602082019050818103600083015261297c81612940565b9050919050565b60006040820190506129986000830185612865565b6129a560208301846123ba565b9392505050565b6000815190506129bb816124cf565b92915050565b6000602082840312156129d7576129d66122ab565b5b60006129e5848285016129ac565b91505092915050565b600060c082019050612a036000830189612441565b612a106020830188612865565b612a1d6040830187612865565b612a2a60608301866123ba565b612a3760808301856123ba565b612a4460a0830184612390565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a90600283612a4f565b9150612a9b82612a5a565b600282019050919050565b6000819050919050565b612ac1612abc82612437565b612aa6565b82525050565b6000612ad282612a83565b9150612ade8285612ab0565b602082019150612aee8284612ab0565b6020820191508190509392505050565b7f4445464f546f6b656e3a696e76616c69642d616464726573732d300000000000600082015250565b6000612b34601b836121fb565b9150612b3f82612afe565b602082019050919050565b60006020820190508181036000830152612b6381612b27565b9050919050565b6000608082019050612b7f6000830187612441565b612b8c6020830186612478565b612b996040830185612441565b612ba66060830184612441565b95945050505050565b7f4445464f546f6b656e3a696e76616c69642d7065726d69740000000000000000600082015250565b6000612be56018836121fb565b9150612bf082612baf565b602082019050919050565b60006020820190508181036000830152612c1481612bd8565b9050919050565b7f4445464f546f6b656e3a7065726d69742d657870697265640000000000000000600082015250565b6000612c516018836121fb565b9150612c5c82612c1b565b602082019050919050565b60006020820190508181036000830152612c8081612c44565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cc18261230e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cf357612cf2612c87565b5b600182019050919050565b7f4445464f546f6b656e3a696e76616c69642d6e6f6e6365000000000000000000600082015250565b6000612d346017836121fb565b9150612d3f82612cfe565b602082019050919050565b60006020820190508181036000830152612d6381612d27565b9050919050565b600060a082019050612d7f6000830188612441565b612d8c6020830187612441565b612d996040830186612441565b612da660608301856123ba565b612db36080830184612865565b9695505050505050565b6000612dc88261230e565b9150612dd38361230e565b925082821015612de657612de5612c87565b5b828203905092915050565b6000612dfc8261230e565b9150612e078361230e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e3c57612e3b612c87565b5b828201905092915050565b6000602082019050612e5c6000830184612865565b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000612e986014836121fb565b9150612ea382612e62565b602082019050919050565b60006020820190508181036000830152612ec781612e8b565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612f046010836121fb565b9150612f0f82612ece565b602082019050919050565b60006020820190508181036000830152612f3381612ef7565b905091905056fea264697066735822122048435739c46b79f0683b30120ca7cfc7dcda758c5a045f6818cc5598e4b16a1664736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063764abbe8116100f95780639dc29fac11610097578063d356ee9d11610071578063d356ee9d146104cd578063dd62ed3e146104e9578063f9f92be414610519578063fe4b84df14610549576101c4565b80639dc29fac14610451578063a9059cbb1461046d578063bf353dbb1461049d576101c4565b80638fcbaf0c116100d35780638fcbaf0c146103df5780639155e083146103fb57806395d89b41146104175780639c52a7f114610435576101c4565b8063764abbe8146103895780637ecebe00146103a55780638456cb59146103d5576101c4565b8063395086fb1161016657806354fd4d501161014057806354fd4d50146103015780635c975abb1461031f57806365fae35e1461033d57806370a0823114610359576101c4565b8063395086fb146102bf5780633f4ba83a146102db57806340c10f19146102e5576101c4565b806323b872dd116101a257806323b872dd1461023557806330adf81f14610265578063313ce567146102835780633644e515146102a1576101c4565b806306fdde03146101c9578063095ea7b3146101e757806318160ddd14610217575b600080fd5b6101d1610565565b6040516101de9190612289565b60405180910390f35b61020160048036038101906101fc9190612344565b61059e565b60405161020e919061239f565b60405180910390f35b61021f61069e565b60405161022c91906123c9565b60405180910390f35b61024f600480360381019061024a91906123e4565b6106a4565b60405161025c919061239f565b60405180910390f35b61026d610dde565b60405161027a9190612450565b60405180910390f35b61028b610e05565b6040516102989190612487565b60405180910390f35b6102a9610e0a565b6040516102b69190612450565b60405180910390f35b6102d960048036038101906102d491906124a2565b610e10565b005b6102e3610ee3565b005b6102ff60048036038101906102fa9190612344565b610f76565b005b610309611107565b6040516103169190612289565b60405180910390f35b610327611140565b604051610334919061239f565b60405180910390f35b610357600480360381019061035291906124a2565b611156565b005b610373600480360381019061036e91906124a2565b611227565b60405161038091906123c9565b60405180910390f35b6103a3600480360381019061039e91906123e4565b61123f565b005b6103bf60048036038101906103ba91906124a2565b61134c565b6040516103cc91906123c9565b60405180910390f35b6103dd611364565b005b6103f960048036038101906103f49190612553565b6113f7565b005b61041560048036038101906104109190612609565b6117ab565b005b61041f61188f565b60405161042c9190612289565b60405180910390f35b61044f600480360381019061044a91906124a2565b6118c8565b005b61046b60048036038101906104669190612344565b611999565b005b61048760048036038101906104829190612344565b611de9565b604051610494919061239f565b60405180910390f35b6104b760048036038101906104b291906124a2565b611e05565b6040516104c491906123c9565b60405180910390f35b6104e760048036038101906104e29190612687565b611e1d565b005b61050360048036038101906104fe91906126b4565b611eea565b60405161051091906123c9565b60405180910390f35b610533600480360381019061052e91906124a2565b611f0f565b604051610540919061239f565b60405180910390f35b610563600480360381019061055e91906126f4565b611f2f565b005b6040518060400160405280600a81526020017f4445464f20546f6b656e0000000000000000000000000000000000000000000081525081565b600081600660006105ad61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1661064761204b565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161068c91906123c9565b60405180910390a36001905092915050565b60045481565b60006106ae611140565b156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e59061276d565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610770576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610767906127d9565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108145750600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a90612845565b60405180910390fd5b60016002600061086161204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156108f95750600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561099057600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfc044388585856040518463ffffffff1660e01b815260040161095d93929190612874565b600060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050505b61099861204b565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610a7657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a3861204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610c565781600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610ac561204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b38906128f7565b60405180910390fd5b610bce600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b8d61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612053565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c1761204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610c9f600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612053565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d2b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612076565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dcb91906123c9565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60085481565b600160026000610e1e61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9090612963565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610edf573d6000803e3d6000fd5b5050565b600160026000610ef161204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6390612963565b60405180910390fd5b610f74612099565b565b600160026000610f8461204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff690612963565b60405180910390fd5b611048600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612076565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109760045482612076565b6004819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110fb91906123c9565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60008060009054906101000a900460ff16905090565b60016002600061116461204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d690612963565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60056020528060005260406000206000915090505481565b60016002600061124d61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90612963565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611303929190612983565b6020604051808303816000875af1158015611322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134691906129c1565b50505050565b60076020528060005260406000206000915090505481565b60016002600061137261204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146113ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e490612963565b60405180910390fd5b6113f56120fb565b565b60006008547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a60405160200161143a969594939291906129ee565b60405160208183030381529060405280519060200120604051602001611461929190612ac7565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16036114e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114df90612b4a565b60405180910390fd5b6001818585856040516000815260200160405260405161150b9493929190612b6a565b6020604051602081039080840390855afa15801561152d573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b90612bfb565b60405180910390fd5b60008614806115b35750854211155b6115f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e990612c67565b60405180910390fd5b600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061164290612cb6565b919050558714611687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167e90612d4a565b60405180910390fd5b6000856116955760006116b7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161179791906123c9565b60405180910390a350505050505050505050565b6001600260006117b961204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182b90612963565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060400160405280600481526020017f4445464f0000000000000000000000000000000000000000000000000000000081525081565b6001600260006118d661204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194890612963565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a12906127d9565b60405180910390fd5b611a2361204b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611b0157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611ac361204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611ce15780600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611b5061204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611bcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc3906128f7565b60405180910390fd5b611c59600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611c1861204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612053565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611ca261204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611d2a600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612053565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d7960045482612053565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ddd91906123c9565b60405180910390a35050565b6000611dfd611df661204b565b84846106a4565b905092915050565b60026020528060005260406000206000915090505481565b600160026000611e2b61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9d90612963565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6006602052816000526040600020602052806000526040600020600091509150505481565b60036020528060005260406000206000915054906101000a900460ff1681565b600160026000611f3d61204b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120833060405160200161202c959493929190612d6a565b6040516020818303038152906040528051906020012060088190555050565b600033905090565b60008282846120629190612dbd565b915081111561207057600080fd5b92915050565b60008282846120859190612df1565b915081101561209357600080fd5b92915050565b6120a161215d565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120e461204b565b6040516120f19190612e47565b60405180910390a1565b6121036121a6565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861214661204b565b6040516121539190612e47565b60405180910390a1565b612165611140565b6121a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219b90612eae565b60405180910390fd5b565b6121ae611140565b156121ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121e590612f1a565b60405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b8381101561222a57808201518184015260208101905061220f565b83811115612239576000848401525b50505050565b6000601f19601f8301169050919050565b600061225b826121f0565b61226581856121fb565b935061227581856020860161220c565b61227e8161223f565b840191505092915050565b600060208201905081810360008301526122a38184612250565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122db826122b0565b9050919050565b6122eb816122d0565b81146122f657600080fd5b50565b600081359050612308816122e2565b92915050565b6000819050919050565b6123218161230e565b811461232c57600080fd5b50565b60008135905061233e81612318565b92915050565b6000806040838503121561235b5761235a6122ab565b5b6000612369858286016122f9565b925050602061237a8582860161232f565b9150509250929050565b60008115159050919050565b61239981612384565b82525050565b60006020820190506123b46000830184612390565b92915050565b6123c38161230e565b82525050565b60006020820190506123de60008301846123ba565b92915050565b6000806000606084860312156123fd576123fc6122ab565b5b600061240b868287016122f9565b935050602061241c868287016122f9565b925050604061242d8682870161232f565b9150509250925092565b6000819050919050565b61244a81612437565b82525050565b60006020820190506124656000830184612441565b92915050565b600060ff82169050919050565b6124818161246b565b82525050565b600060208201905061249c6000830184612478565b92915050565b6000602082840312156124b8576124b76122ab565b5b60006124c6848285016122f9565b91505092915050565b6124d881612384565b81146124e357600080fd5b50565b6000813590506124f5816124cf565b92915050565b6125048161246b565b811461250f57600080fd5b50565b600081359050612521816124fb565b92915050565b61253081612437565b811461253b57600080fd5b50565b60008135905061254d81612527565b92915050565b600080600080600080600080610100898b031215612574576125736122ab565b5b60006125828b828c016122f9565b98505060206125938b828c016122f9565b97505060406125a48b828c0161232f565b96505060606125b58b828c0161232f565b95505060806125c68b828c016124e6565b94505060a06125d78b828c01612512565b93505060c06125e88b828c0161253e565b92505060e06125f98b828c0161253e565b9150509295985092959890939650565b600080604083850312156126205761261f6122ab565b5b600061262e858286016122f9565b925050602061263f858286016124e6565b9150509250929050565b6000612654826122d0565b9050919050565b61266481612649565b811461266f57600080fd5b50565b6000813590506126818161265b565b92915050565b60006020828403121561269d5761269c6122ab565b5b60006126ab84828501612672565b91505092915050565b600080604083850312156126cb576126ca6122ab565b5b60006126d9858286016122f9565b92505060206126ea858286016122f9565b9150509250929050565b60006020828403121561270a576127096122ab565b5b60006127188482850161232f565b91505092915050565b7f4445464f546f6b656e3a70617573656400000000000000000000000000000000600082015250565b60006127576010836121fb565b915061276282612721565b602082019050919050565b600060208201905081810360008301526127868161274a565b9050919050565b7f4445464f546f6b656e3a696e73756666696369656e742d62616c616e63650000600082015250565b60006127c3601e836121fb565b91506127ce8261278d565b602082019050919050565b600060208201905081810360008301526127f2816127b6565b9050919050565b7f4445464f546f6b656e3a626c61636b6c69737465640000000000000000000000600082015250565b600061282f6015836121fb565b915061283a826127f9565b602082019050919050565b6000602082019050818103600083015261285e81612822565b9050919050565b61286e816122d0565b82525050565b60006060820190506128896000830186612865565b6128966020830185612865565b6128a360408301846123ba565b949350505050565b7f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e6365600082015250565b60006128e16020836121fb565b91506128ec826128ab565b602082019050919050565b60006020820190508181036000830152612910816128d4565b9050919050565b7f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000600082015250565b600061294d6018836121fb565b915061295882612917565b602082019050919050565b6000602082019050818103600083015261297c81612940565b9050919050565b60006040820190506129986000830185612865565b6129a560208301846123ba565b9392505050565b6000815190506129bb816124cf565b92915050565b6000602082840312156129d7576129d66122ab565b5b60006129e5848285016129ac565b91505092915050565b600060c082019050612a036000830189612441565b612a106020830188612865565b612a1d6040830187612865565b612a2a60608301866123ba565b612a3760808301856123ba565b612a4460a0830184612390565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a90600283612a4f565b9150612a9b82612a5a565b600282019050919050565b6000819050919050565b612ac1612abc82612437565b612aa6565b82525050565b6000612ad282612a83565b9150612ade8285612ab0565b602082019150612aee8284612ab0565b6020820191508190509392505050565b7f4445464f546f6b656e3a696e76616c69642d616464726573732d300000000000600082015250565b6000612b34601b836121fb565b9150612b3f82612afe565b602082019050919050565b60006020820190508181036000830152612b6381612b27565b9050919050565b6000608082019050612b7f6000830187612441565b612b8c6020830186612478565b612b996040830185612441565b612ba66060830184612441565b95945050505050565b7f4445464f546f6b656e3a696e76616c69642d7065726d69740000000000000000600082015250565b6000612be56018836121fb565b9150612bf082612baf565b602082019050919050565b60006020820190508181036000830152612c1481612bd8565b9050919050565b7f4445464f546f6b656e3a7065726d69742d657870697265640000000000000000600082015250565b6000612c516018836121fb565b9150612c5c82612c1b565b602082019050919050565b60006020820190508181036000830152612c8081612c44565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cc18261230e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cf357612cf2612c87565b5b600182019050919050565b7f4445464f546f6b656e3a696e76616c69642d6e6f6e6365000000000000000000600082015250565b6000612d346017836121fb565b9150612d3f82612cfe565b602082019050919050565b60006020820190508181036000830152612d6381612d27565b9050919050565b600060a082019050612d7f6000830188612441565b612d8c6020830187612441565b612d996040830186612441565b612da660608301856123ba565b612db36080830184612865565b9695505050505050565b6000612dc88261230e565b9150612dd38361230e565b925082821015612de657612de5612c87565b5b828203905092915050565b6000612dfc8261230e565b9150612e078361230e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e3c57612e3b612c87565b5b828201905092915050565b6000602082019050612e5c6000830184612865565b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000612e986014836121fb565b9150612ea382612e62565b602082019050919050565b60006020820190508181036000830152612ec781612e8b565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612f046010836121fb565b9150612f0f82612ece565b602082019050919050565b60006020820190508181036000830152612f3381612ef7565b905091905056fea264697066735822122048435739c46b79f0683b30120ca7cfc7dcda758c5a045f6818cc5598e4b16a1664736f6c634300080f0033",
  "devdoc": {
    "author": "Decentralized Foundation Team",
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "decimals": {
        "details": "Returns the decimals places of the token."
      },
      "name": {
        "details": "Returns the name of the token."
      },
      "symbol": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "title": "DEFO Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 569,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9441,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "transferLimiter",
        "offset": 1,
        "slot": "0",
        "type": "t_contract(ITransferLimiter)8022"
      },
      {
        "astId": 9445,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9449,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "wards",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9453,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "blacklist",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9467,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 9471,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9477,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "allowance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 9481,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "nonces",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9483,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "8",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ITransferLimiter)8022": {
        "encoding": "inplace",
        "label": "contract ITransferLimiter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
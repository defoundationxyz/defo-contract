{
  "address": "0x180C2aD4AA643c965B20AfD926d0aB3048e2A291",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "authorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLinkedDiamond",
      "outputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransferLimiter",
          "name": "_transferLimiter",
          "type": "address"
        }
      ],
      "name": "linkDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "recoverLostAVAX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverLostDEFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allow",
          "type": "bool"
        }
      ],
      "name": "updateBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa35fdf697f4d5e4650d341ceacb94fe56cc445f98d734a065effe377acdda76e",
  "receipt": {
    "to": null,
    "from": "0xe6C77945dFb8148524C2794f025aC55f8d944C5E",
    "contractAddress": "0x180C2aD4AA643c965B20AfD926d0aB3048e2A291",
    "transactionIndex": 0,
    "gasUsed": "2782971",
    "logsBloom": "0x
    "blockHash": "0x62cd6451efa9a6987ca6a888a15a8916f9bbd2ddedb2e312fcbdac4e10979397",
    "transactionHash": "0xa35fdf697f4d5e4650d341ceacb94fe56cc445f98d734a065effe377acdda76e",
    "logs": [],
    "blockNumber": 13304326,
    "cumulativeGasUsed": "2782971",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "43113"
  ],
  "numDeployments": 9,
  "solcInputHash": "825d23aeafc254050664db941ff63471",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLinkedDiamond\",\"outputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferLimiter\",\"name\":\"_transferLimiter\",\"type\":\"address\"}],\"name\":\"linkDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"recoverLostAVAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverLostDEFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Foundation Team\",\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals\":{\"details\":\"Returns the decimals places of the token.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"title\":\"DEFO Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/DEFOToken.sol\":\"DEFOToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ITransferLimiter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.15;\\n\\n/** @title  ILimiter, limiter for DEFO token transfer\\n  * @author Decentralized Foundation Team\\n*/\\n\\ninterface ITransferLimiter {\\n    function yieldGemTransferLimit(\\n        address to,\\n        address from,\\n        uint256 tokenId\\n    ) external;\\n\\n    function DEFOTokenTransferLimit(\\n        address to,\\n        address from,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xa7741cdf7be9bb3980ef635519bf7eca4b51c951116f52735621b75c9314d278\",\"license\":\"GPL-3.0\"},\"contracts/token/DEFOToken.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"../interfaces/ITransferLimiter.sol\\\";\\n\\n/** @title  DEFO Token\\n  * @author Decentralized Foundation Team\\n  * @notice ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent\\n*/\\n\\ncontract DEFOToken is Pausable, IERC20, IERC20Metadata {\\n    ITransferLimiter transferLimiter;\\n\\n    mapping(address => uint256) private _balances;\\n\\n    // @notice Admins list\\n    mapping(address => uint256) public wards;\\n\\n    // @notice Blacklist\\n    mapping(address => bool) public blacklist;\\n\\n    // --- ERC20 Data ---\\n    string public constant name = \\\"DEFO Token\\\";\\n    string public constant symbol = \\\"DEFO\\\";\\n    string public constant version = \\\"1\\\";\\n    uint8 public constant decimals = 18;\\n    uint256 public totalSupply;\\n    bool public initialized;\\n\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    mapping(address => uint256) public nonces;\\n\\n\\n    // --- EIP712 niceties ---\\n    bytes32 public DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n\\n    /* ============ External and Public Functions ============ */\\n\\n    modifier auth() {\\n        require(wards[_msgSender()] == 1, \\\"DEFOToken:not-authorized\\\");\\n        _;\\n    }\\n\\n    constructor(uint256 chainId_) {\\n    }\\n\\n    function initialize(uint256 chainId_) external {\\n        if (!initialized) {\\n            initialized = true;\\n            wards[_msgSender()] = 1;\\n            DOMAIN_SEPARATOR = keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(bytes(version)),\\n                    chainId_,\\n                    address(this)\\n                )\\n            );\\n        }\\n    }\\n\\n\\n    // --- Token ---\\n\\n    function transfer(address dst, uint256 wad) external returns (bool) {\\n        return transferFrom(_msgSender(), dst, wad);\\n    }\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public returns (bool) {\\n        require(!paused(), \\\"DEFOToken:paused\\\");\\n        require(balanceOf[src] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        require(!blacklist[src] && !blacklist[dst], \\\"DEFOToken:blacklisted\\\");\\n        if (wards[_msgSender()] != 1 && wards[src] != 1 && address(transferLimiter) != address(0))\\n            transferLimiter.DEFOTokenTransferLimit(src, dst, wad);\\n        if (src != _msgSender() && allowance[src][_msgSender()] != type(uint256).max) {\\n            require(allowance[src][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[src][_msgSender()] = sub(allowance[src][_msgSender()], wad);\\n        }\\n        balanceOf[src] = sub(balanceOf[src], wad);\\n        balanceOf[dst] = add(balanceOf[dst], wad);\\n        emit Transfer(src, dst, wad);\\n        return true;\\n    }\\n\\n\\n    function burn(address usr, uint256 wad) external {\\n        require(balanceOf[usr] >= wad, \\\"DEFOToken:insufficient-balance\\\");\\n        if (usr != _msgSender() && allowance[usr][_msgSender()] != type(uint256).max) {\\n            require(allowance[usr][_msgSender()] >= wad, \\\"DEFOToken:insufficient-allowance\\\");\\n            allowance[usr][_msgSender()] = sub(allowance[usr][_msgSender()], wad);\\n        }\\n        balanceOf[usr] = sub(balanceOf[usr], wad);\\n        totalSupply = sub(totalSupply, wad);\\n        emit Transfer(usr, address(0), wad);\\n    }\\n\\n    function approve(address usr, uint256 wad) external returns (bool) {\\n        allowance[_msgSender()][usr] = wad;\\n        emit Approval(_msgSender(), usr, wad);\\n        return true;\\n    }\\n\\n    // --- Approve by signature ---\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed))\\n            )\\n        );\\n\\n        require(holder != address(0), \\\"DEFOToken:invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"DEFOToken:invalid-permit\\\");\\n        require(expiry == 0 || block.timestamp <= expiry, \\\"DEFOToken:permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"DEFOToken:invalid-nonce\\\");\\n        uint256 wad = allowed ? type(uint256).max : 0;\\n        allowance[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n\\n    /* ============ External and Public Admin Functions ============ */\\n\\n    function linkDiamond(ITransferLimiter _transferLimiter) external auth {\\n        transferLimiter = _transferLimiter;\\n    }\\n\\n    function mint(address usr, uint256 wad) external auth {\\n        balanceOf[usr] = add(balanceOf[usr], wad);\\n        totalSupply = add(totalSupply, wad);\\n        emit Transfer(address(0), usr, wad);\\n    }\\n\\n    // @notice Grant access\\n    // @param guy admin to grant auth\\n    function rely(address guy) external auth {\\n        wards[guy] = 1;\\n    }\\n\\n    // @notice Deny access\\n    // @param guy deny auth for\\n    function deny(address guy) external auth {\\n        wards[guy] = 0;\\n    }\\n\\n\\n    // Recovering lost tokens and avax\\n    function recoverLostDEFO(\\n        address _token,\\n        address _to,\\n        uint256 _amount\\n    ) external auth {\\n        IERC20(_token).transfer(_to, _amount);\\n    }\\n\\n    function recoverLostAVAX(address _to) external auth {\\n        payable(_to).transfer(address(this).balance);\\n    }\\n\\n    function updateBlacklist(address _address, bool _allow) external auth {\\n        blacklist[_address] = _allow;\\n    }\\n\\n    function pause() external auth {\\n        _pause();\\n    }\\n\\n    function unpause() external auth {\\n        _unpause();\\n    }\\n\\n    function getLinkedDiamond() external view returns (ITransferLimiter) {\\n        return transferLimiter;\\n    }\\n\\n    function authorized(address guy) external view returns (bool) {\\n        return wards[guy] == 1;\\n    }\\n    /* ============ Internal Functions ============ */\\n\\n    // --- Math ---\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xbdff4427f624d80b93e3176d3fa4ed4edcf51ecaebeb44321e024cf9f550da2d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200325538038062003255833981810160405281019062000037919062000098565b60008060006101000a81548160ff02191690831515021790555050620000ca565b600080fd5b6000819050919050565b62000072816200005d565b81146200007e57600080fd5b50565b600081519050620000928162000067565b92915050565b600060208284031215620000b157620000b062000058565b5b6000620000c18482850162000081565b91505092915050565b61317b80620000da6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063764abbe81161010f578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e14610558578063ec659a9714610588578063f9f92be4146105a6578063fe4b84df146105d6576101e5565b8063a9059cbb146104ac578063b9181611146104dc578063bf353dbb1461050c578063d356ee9d1461053c576101e5565b80639155e083116100de5780639155e0831461043a57806395d89b41146104565780639c52a7f1146104745780639dc29fac14610490576101e5565b8063764abbe8146103c85780637ecebe00146103e45780638456cb59146104145780638fcbaf0c1461041e576101e5565b80633644e5151161018757806354fd4d501161015657806354fd4d50146103405780635c975abb1461035e57806365fae35e1461037c57806370a0823114610398576101e5565b80633644e515146102e0578063395086fb146102fe5780633f4ba83a1461031a57806340c10f1914610324576101e5565b806318160ddd116101c357806318160ddd1461025657806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101e5565b806306fdde03146101ea578063095ea7b314610208578063158ef93e14610238575b600080fd5b6101f26105f2565b6040516101ff919061241a565b60405180910390f35b610222600480360381019061021d91906124d5565b61062b565b60405161022f9190612530565b60405180910390f35b61024061072b565b60405161024d9190612530565b60405180910390f35b61025e61073e565b60405161026b919061255a565b60405180910390f35b61028e60048036038101906102899190612575565b610744565b60405161029b9190612530565b60405180910390f35b6102ac610eca565b6040516102b991906125e1565b60405180910390f35b6102ca610ef1565b6040516102d79190612618565b60405180910390f35b6102e8610ef6565b6040516102f591906125e1565b60405180910390f35b61031860048036038101906103139190612633565b610efc565b005b610322610fcf565b005b61033e600480360381019061033991906124d5565b611062565b005b6103486111f3565b604051610355919061241a565b60405180910390f35b61036661122c565b6040516103739190612530565b60405180910390f35b61039660048036038101906103919190612633565b611242565b005b6103b260048036038101906103ad9190612633565b611313565b6040516103bf919061255a565b60405180910390f35b6103e260048036038101906103dd9190612575565b61132b565b005b6103fe60048036038101906103f99190612633565b611438565b60405161040b919061255a565b60405180910390f35b61041c611450565b005b610438600480360381019061043391906126e4565b6114e3565b005b610454600480360381019061044f919061279a565b611897565b005b61045e61197b565b60405161046b919061241a565b60405180910390f35b61048e60048036038101906104899190612633565b6119b4565b005b6104aa60048036038101906104a591906124d5565b611a85565b005b6104c660048036038101906104c191906124d5565b611ed5565b6040516104d39190612530565b60405180910390f35b6104f660048036038101906104f19190612633565b611ef1565b6040516105039190612530565b60405180910390f35b61052660048036038101906105219190612633565b611f3d565b604051610533919061255a565b60405180910390f35b61055660048036038101906105519190612818565b611f55565b005b610572600480360381019061056d9190612845565b612022565b60405161057f919061255a565b60405180910390f35b610590612047565b60405161059d91906128e4565b60405180910390f35b6105c060048036038101906105bb9190612633565b612070565b6040516105cd9190612530565b60405180910390f35b6105f060048036038101906105eb91906128ff565b612090565b005b6040518060400160405280600a81526020017f4445464f20546f6b656e0000000000000000000000000000000000000000000081525081565b6000816007600061063a6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166106d46121dc565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610719919061255a565b60405180910390a36001905092915050565b600560009054906101000a900460ff1681565b60045481565b600061074e61122c565b1561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590612978565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610810576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610807906129e4565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108b45750600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b6108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea90612a50565b60405180910390fd5b6001600260006109016121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415801561098a57506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b80156109e55750600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610a7c57600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfc044388585856040518463ffffffff1660e01b8152600401610a4993929190612a7f565b600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050505b610a846121dc565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610b6257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b246121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610d425781600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bb16121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2490612b02565b60405180910390fd5b610cba600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c796121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836121e4565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610d036121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610d8b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836121e4565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e17600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612207565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eb7919061255a565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60095481565b600160026000610f0a6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7c90612b6e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610fcb573d6000803e3d6000fd5b5050565b600160026000610fdd6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612b6e565b60405180910390fd5b61106061222a565b565b6001600260006110706121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146110eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e290612b6e565b60405180910390fd5b611134600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612207565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061118360045482612207565b6004819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111e7919061255a565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60008060009054906101000a900460ff16905090565b6001600260006112506121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290612b6e565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60066020528060005260406000206000915090505481565b6001600260006113396121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612b6e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016113ef929190612b8e565b6020604051808303816000875af115801561140e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114329190612bcc565b50505050565b60086020528060005260406000206000915090505481565b60016002600061145e6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090612b6e565b60405180910390fd5b6114e161228c565b565b60006009547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a60405160200161152696959493929190612bf9565b6040516020818303038152906040528051906020012060405160200161154d929190612cd2565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16036115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cb90612d55565b60405180910390fd5b600181858585604051600081526020016040526040516115f79493929190612d75565b6020604051602081039080840390855afa158015611619573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168790612e06565b60405180910390fd5b600086148061169f5750854211155b6116de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d590612e72565b60405180910390fd5b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061172e90612ec1565b919050558714611773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176a90612f55565b60405180910390fd5b6000856117815760006117a3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611883919061255a565b60405180910390a350505050505050505050565b6001600260006118a56121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611920576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191790612b6e565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060400160405280600481526020017f4445464f0000000000000000000000000000000000000000000000000000000081525081565b6001600260006119c26121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611a3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3490612b6e565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afe906129e4565b60405180910390fd5b611b0f6121dc565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611bed57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611baf6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611dcd5780600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611c3c6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611caf90612b02565b60405180910390fd5b611d45600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611d046121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826121e4565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611d8e6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611e16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826121e4565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e65600454826121e4565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ec9919061255a565b60405180910390a35050565b6000611ee9611ee26121dc565b8484610744565b905092915050565b60006001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054149050919050565b60026020528060005260406000206000915090505481565b600160026000611f636121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611fde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd590612b6e565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b600560009054906101000a900460ff166121d9576001600560006101000a81548160ff0219169083151502179055506001600260006120cd6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016121bc959493929190612f75565b604051602081830303815290604052805190602001206009819055505b50565b600033905090565b60008282846121f39190612fc8565b915081111561220157600080fd5b92915050565b60008282846122169190612ffc565b915081101561222457600080fd5b92915050565b6122326122ee565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6122756121dc565b6040516122829190613052565b60405180910390a1565b612294612337565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586122d76121dc565b6040516122e49190613052565b60405180910390a1565b6122f661122c565b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161232c906130b9565b60405180910390fd5b565b61233f61122c565b1561237f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237690613125565b60405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b838110156123bb5780820151818401526020810190506123a0565b838111156123ca576000848401525b50505050565b6000601f19601f8301169050919050565b60006123ec82612381565b6123f6818561238c565b935061240681856020860161239d565b61240f816123d0565b840191505092915050565b6000602082019050818103600083015261243481846123e1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061246c82612441565b9050919050565b61247c81612461565b811461248757600080fd5b50565b60008135905061249981612473565b92915050565b6000819050919050565b6124b28161249f565b81146124bd57600080fd5b50565b6000813590506124cf816124a9565b92915050565b600080604083850312156124ec576124eb61243c565b5b60006124fa8582860161248a565b925050602061250b858286016124c0565b9150509250929050565b60008115159050919050565b61252a81612515565b82525050565b60006020820190506125456000830184612521565b92915050565b6125548161249f565b82525050565b600060208201905061256f600083018461254b565b92915050565b60008060006060848603121561258e5761258d61243c565b5b600061259c8682870161248a565b93505060206125ad8682870161248a565b92505060406125be868287016124c0565b9150509250925092565b6000819050919050565b6125db816125c8565b82525050565b60006020820190506125f660008301846125d2565b92915050565b600060ff82169050919050565b612612816125fc565b82525050565b600060208201905061262d6000830184612609565b92915050565b6000602082840312156126495761264861243c565b5b60006126578482850161248a565b91505092915050565b61266981612515565b811461267457600080fd5b50565b60008135905061268681612660565b92915050565b612695816125fc565b81146126a057600080fd5b50565b6000813590506126b28161268c565b92915050565b6126c1816125c8565b81146126cc57600080fd5b50565b6000813590506126de816126b8565b92915050565b600080600080600080600080610100898b0312156127055761270461243c565b5b60006127138b828c0161248a565b98505060206127248b828c0161248a565b97505060406127358b828c016124c0565b96505060606127468b828c016124c0565b95505060806127578b828c01612677565b94505060a06127688b828c016126a3565b93505060c06127798b828c016126cf565b92505060e061278a8b828c016126cf565b9150509295985092959890939650565b600080604083850312156127b1576127b061243c565b5b60006127bf8582860161248a565b92505060206127d085828601612677565b9150509250929050565b60006127e582612461565b9050919050565b6127f5816127da565b811461280057600080fd5b50565b600081359050612812816127ec565b92915050565b60006020828403121561282e5761282d61243c565b5b600061283c84828501612803565b91505092915050565b6000806040838503121561285c5761285b61243c565b5b600061286a8582860161248a565b925050602061287b8582860161248a565b9150509250929050565b6000819050919050565b60006128aa6128a56128a084612441565b612885565b612441565b9050919050565b60006128bc8261288f565b9050919050565b60006128ce826128b1565b9050919050565b6128de816128c3565b82525050565b60006020820190506128f960008301846128d5565b92915050565b6000602082840312156129155761291461243c565b5b6000612923848285016124c0565b91505092915050565b7f4445464f546f6b656e3a70617573656400000000000000000000000000000000600082015250565b600061296260108361238c565b915061296d8261292c565b602082019050919050565b6000602082019050818103600083015261299181612955565b9050919050565b7f4445464f546f6b656e3a696e73756666696369656e742d62616c616e63650000600082015250565b60006129ce601e8361238c565b91506129d982612998565b602082019050919050565b600060208201905081810360008301526129fd816129c1565b9050919050565b7f4445464f546f6b656e3a626c61636b6c69737465640000000000000000000000600082015250565b6000612a3a60158361238c565b9150612a4582612a04565b602082019050919050565b60006020820190508181036000830152612a6981612a2d565b9050919050565b612a7981612461565b82525050565b6000606082019050612a946000830186612a70565b612aa16020830185612a70565b612aae604083018461254b565b949350505050565b7f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e6365600082015250565b6000612aec60208361238c565b9150612af782612ab6565b602082019050919050565b60006020820190508181036000830152612b1b81612adf565b9050919050565b7f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000600082015250565b6000612b5860188361238c565b9150612b6382612b22565b602082019050919050565b60006020820190508181036000830152612b8781612b4b565b9050919050565b6000604082019050612ba36000830185612a70565b612bb0602083018461254b565b9392505050565b600081519050612bc681612660565b92915050565b600060208284031215612be257612be161243c565b5b6000612bf084828501612bb7565b91505092915050565b600060c082019050612c0e60008301896125d2565b612c1b6020830188612a70565b612c286040830187612a70565b612c35606083018661254b565b612c42608083018561254b565b612c4f60a0830184612521565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c9b600283612c5a565b9150612ca682612c65565b600282019050919050565b6000819050919050565b612ccc612cc7826125c8565b612cb1565b82525050565b6000612cdd82612c8e565b9150612ce98285612cbb565b602082019150612cf98284612cbb565b6020820191508190509392505050565b7f4445464f546f6b656e3a696e76616c69642d616464726573732d300000000000600082015250565b6000612d3f601b8361238c565b9150612d4a82612d09565b602082019050919050565b60006020820190508181036000830152612d6e81612d32565b9050919050565b6000608082019050612d8a60008301876125d2565b612d976020830186612609565b612da460408301856125d2565b612db160608301846125d2565b95945050505050565b7f4445464f546f6b656e3a696e76616c69642d7065726d69740000000000000000600082015250565b6000612df060188361238c565b9150612dfb82612dba565b602082019050919050565b60006020820190508181036000830152612e1f81612de3565b9050919050565b7f4445464f546f6b656e3a7065726d69742d657870697265640000000000000000600082015250565b6000612e5c60188361238c565b9150612e6782612e26565b602082019050919050565b60006020820190508181036000830152612e8b81612e4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ecc8261249f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612efe57612efd612e92565b5b600182019050919050565b7f4445464f546f6b656e3a696e76616c69642d6e6f6e6365000000000000000000600082015250565b6000612f3f60178361238c565b9150612f4a82612f09565b602082019050919050565b60006020820190508181036000830152612f6e81612f32565b9050919050565b600060a082019050612f8a60008301886125d2565b612f9760208301876125d2565b612fa460408301866125d2565b612fb1606083018561254b565b612fbe6080830184612a70565b9695505050505050565b6000612fd38261249f565b9150612fde8361249f565b925082821015612ff157612ff0612e92565b5b828203905092915050565b60006130078261249f565b91506130128361249f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561304757613046612e92565b5b828201905092915050565b60006020820190506130676000830184612a70565b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006130a360148361238c565b91506130ae8261306d565b602082019050919050565b600060208201905081810360008301526130d281613096565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061310f60108361238c565b915061311a826130d9565b602082019050919050565b6000602082019050818103600083015261313e81613102565b905091905056fea2646970667358221220c3ed5ad3a19bba3b836ef25e920ffd3f30e3a539c8fc37e781c0d9b92f16abe364736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063764abbe81161010f578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e14610558578063ec659a9714610588578063f9f92be4146105a6578063fe4b84df146105d6576101e5565b8063a9059cbb146104ac578063b9181611146104dc578063bf353dbb1461050c578063d356ee9d1461053c576101e5565b80639155e083116100de5780639155e0831461043a57806395d89b41146104565780639c52a7f1146104745780639dc29fac14610490576101e5565b8063764abbe8146103c85780637ecebe00146103e45780638456cb59146104145780638fcbaf0c1461041e576101e5565b80633644e5151161018757806354fd4d501161015657806354fd4d50146103405780635c975abb1461035e57806365fae35e1461037c57806370a0823114610398576101e5565b80633644e515146102e0578063395086fb146102fe5780633f4ba83a1461031a57806340c10f1914610324576101e5565b806318160ddd116101c357806318160ddd1461025657806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101e5565b806306fdde03146101ea578063095ea7b314610208578063158ef93e14610238575b600080fd5b6101f26105f2565b6040516101ff919061241a565b60405180910390f35b610222600480360381019061021d91906124d5565b61062b565b60405161022f9190612530565b60405180910390f35b61024061072b565b60405161024d9190612530565b60405180910390f35b61025e61073e565b60405161026b919061255a565b60405180910390f35b61028e60048036038101906102899190612575565b610744565b60405161029b9190612530565b60405180910390f35b6102ac610eca565b6040516102b991906125e1565b60405180910390f35b6102ca610ef1565b6040516102d79190612618565b60405180910390f35b6102e8610ef6565b6040516102f591906125e1565b60405180910390f35b61031860048036038101906103139190612633565b610efc565b005b610322610fcf565b005b61033e600480360381019061033991906124d5565b611062565b005b6103486111f3565b604051610355919061241a565b60405180910390f35b61036661122c565b6040516103739190612530565b60405180910390f35b61039660048036038101906103919190612633565b611242565b005b6103b260048036038101906103ad9190612633565b611313565b6040516103bf919061255a565b60405180910390f35b6103e260048036038101906103dd9190612575565b61132b565b005b6103fe60048036038101906103f99190612633565b611438565b60405161040b919061255a565b60405180910390f35b61041c611450565b005b610438600480360381019061043391906126e4565b6114e3565b005b610454600480360381019061044f919061279a565b611897565b005b61045e61197b565b60405161046b919061241a565b60405180910390f35b61048e60048036038101906104899190612633565b6119b4565b005b6104aa60048036038101906104a591906124d5565b611a85565b005b6104c660048036038101906104c191906124d5565b611ed5565b6040516104d39190612530565b60405180910390f35b6104f660048036038101906104f19190612633565b611ef1565b6040516105039190612530565b60405180910390f35b61052660048036038101906105219190612633565b611f3d565b604051610533919061255a565b60405180910390f35b61055660048036038101906105519190612818565b611f55565b005b610572600480360381019061056d9190612845565b612022565b60405161057f919061255a565b60405180910390f35b610590612047565b60405161059d91906128e4565b60405180910390f35b6105c060048036038101906105bb9190612633565b612070565b6040516105cd9190612530565b60405180910390f35b6105f060048036038101906105eb91906128ff565b612090565b005b6040518060400160405280600a81526020017f4445464f20546f6b656e0000000000000000000000000000000000000000000081525081565b6000816007600061063a6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff166106d46121dc565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610719919061255a565b60405180910390a36001905092915050565b600560009054906101000a900460ff1681565b60045481565b600061074e61122c565b1561078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590612978565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610810576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610807906129e4565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108b45750600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b6108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea90612a50565b60405180910390fd5b6001600260006109016121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415801561098a57506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b80156109e55750600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610a7c57600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfc044388585856040518463ffffffff1660e01b8152600401610a4993929190612a7f565b600060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050505b610a846121dc565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610b6257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b246121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610d425781600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610bb16121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2490612b02565b60405180910390fd5b610cba600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c796121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836121e4565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610d036121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610d8b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836121e4565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e17600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483612207565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eb7919061255a565b60405180910390a3600190509392505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60095481565b600160026000610f0a6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7c90612b6e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610fcb573d6000803e3d6000fd5b5050565b600160026000610fdd6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612b6e565b60405180910390fd5b61106061222a565b565b6001600260006110706121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146110eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e290612b6e565b60405180910390fd5b611134600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482612207565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061118360045482612207565b6004819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111e7919061255a565b60405180910390a35050565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b60008060009054906101000a900460ff16905090565b6001600260006112506121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c290612b6e565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60066020528060005260406000206000915090505481565b6001600260006113396121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90612b6e565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016113ef929190612b8e565b6020604051808303816000875af115801561140e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114329190612bcc565b50505050565b60086020528060005260406000206000915090505481565b60016002600061145e6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090612b6e565b60405180910390fd5b6114e161228c565b565b60006009547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a60405160200161152696959493929190612bf9565b6040516020818303038152906040528051906020012060405160200161154d929190612cd2565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16036115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115cb90612d55565b60405180910390fd5b600181858585604051600081526020016040526040516115f79493929190612d75565b6020604051602081039080840390855afa158015611619573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614611690576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168790612e06565b60405180910390fd5b600086148061169f5750854211155b6116de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d590612e72565b60405180910390fd5b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061172e90612ec1565b919050558714611773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176a90612f55565b60405180910390fd5b6000856117815760006117a3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b905080600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611883919061255a565b60405180910390a350505050505050505050565b6001600260006118a56121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611920576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191790612b6e565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060400160405280600481526020017f4445464f0000000000000000000000000000000000000000000000000000000081525081565b6001600260006119c26121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611a3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3490612b6e565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afe906129e4565b60405180910390fd5b611b0f6121dc565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015611bed57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611baf6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15611dcd5780600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611c3c6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611caf90612b02565b60405180910390fd5b611d45600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611d046121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826121e4565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000611d8e6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b611e16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826121e4565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e65600454826121e4565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ec9919061255a565b60405180910390a35050565b6000611ee9611ee26121dc565b8484610744565b905092915050565b60006001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054149050919050565b60026020528060005260406000206000915090505481565b600160026000611f636121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611fde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd590612b6e565b60405180910390fd5b80600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b600560009054906101000a900460ff166121d9576001600560006101000a81548160ff0219169083151502179055506001600260006120cd6121dc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600a81526020017f4445464f20546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012083306040516020016121bc959493929190612f75565b604051602081830303815290604052805190602001206009819055505b50565b600033905090565b60008282846121f39190612fc8565b915081111561220157600080fd5b92915050565b60008282846122169190612ffc565b915081101561222457600080fd5b92915050565b6122326122ee565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6122756121dc565b6040516122829190613052565b60405180910390a1565b612294612337565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586122d76121dc565b6040516122e49190613052565b60405180910390a1565b6122f661122c565b612335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161232c906130b9565b60405180910390fd5b565b61233f61122c565b1561237f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237690613125565b60405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b838110156123bb5780820151818401526020810190506123a0565b838111156123ca576000848401525b50505050565b6000601f19601f8301169050919050565b60006123ec82612381565b6123f6818561238c565b935061240681856020860161239d565b61240f816123d0565b840191505092915050565b6000602082019050818103600083015261243481846123e1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061246c82612441565b9050919050565b61247c81612461565b811461248757600080fd5b50565b60008135905061249981612473565b92915050565b6000819050919050565b6124b28161249f565b81146124bd57600080fd5b50565b6000813590506124cf816124a9565b92915050565b600080604083850312156124ec576124eb61243c565b5b60006124fa8582860161248a565b925050602061250b858286016124c0565b9150509250929050565b60008115159050919050565b61252a81612515565b82525050565b60006020820190506125456000830184612521565b92915050565b6125548161249f565b82525050565b600060208201905061256f600083018461254b565b92915050565b60008060006060848603121561258e5761258d61243c565b5b600061259c8682870161248a565b93505060206125ad8682870161248a565b92505060406125be868287016124c0565b9150509250925092565b6000819050919050565b6125db816125c8565b82525050565b60006020820190506125f660008301846125d2565b92915050565b600060ff82169050919050565b612612816125fc565b82525050565b600060208201905061262d6000830184612609565b92915050565b6000602082840312156126495761264861243c565b5b60006126578482850161248a565b91505092915050565b61266981612515565b811461267457600080fd5b50565b60008135905061268681612660565b92915050565b612695816125fc565b81146126a057600080fd5b50565b6000813590506126b28161268c565b92915050565b6126c1816125c8565b81146126cc57600080fd5b50565b6000813590506126de816126b8565b92915050565b600080600080600080600080610100898b0312156127055761270461243c565b5b60006127138b828c0161248a565b98505060206127248b828c0161248a565b97505060406127358b828c016124c0565b96505060606127468b828c016124c0565b95505060806127578b828c01612677565b94505060a06127688b828c016126a3565b93505060c06127798b828c016126cf565b92505060e061278a8b828c016126cf565b9150509295985092959890939650565b600080604083850312156127b1576127b061243c565b5b60006127bf8582860161248a565b92505060206127d085828601612677565b9150509250929050565b60006127e582612461565b9050919050565b6127f5816127da565b811461280057600080fd5b50565b600081359050612812816127ec565b92915050565b60006020828403121561282e5761282d61243c565b5b600061283c84828501612803565b91505092915050565b6000806040838503121561285c5761285b61243c565b5b600061286a8582860161248a565b925050602061287b8582860161248a565b9150509250929050565b6000819050919050565b60006128aa6128a56128a084612441565b612885565b612441565b9050919050565b60006128bc8261288f565b9050919050565b60006128ce826128b1565b9050919050565b6128de816128c3565b82525050565b60006020820190506128f960008301846128d5565b92915050565b6000602082840312156129155761291461243c565b5b6000612923848285016124c0565b91505092915050565b7f4445464f546f6b656e3a70617573656400000000000000000000000000000000600082015250565b600061296260108361238c565b915061296d8261292c565b602082019050919050565b6000602082019050818103600083015261299181612955565b9050919050565b7f4445464f546f6b656e3a696e73756666696369656e742d62616c616e63650000600082015250565b60006129ce601e8361238c565b91506129d982612998565b602082019050919050565b600060208201905081810360008301526129fd816129c1565b9050919050565b7f4445464f546f6b656e3a626c61636b6c69737465640000000000000000000000600082015250565b6000612a3a60158361238c565b9150612a4582612a04565b602082019050919050565b60006020820190508181036000830152612a6981612a2d565b9050919050565b612a7981612461565b82525050565b6000606082019050612a946000830186612a70565b612aa16020830185612a70565b612aae604083018461254b565b949350505050565b7f4445464f546f6b656e3a696e73756666696369656e742d616c6c6f77616e6365600082015250565b6000612aec60208361238c565b9150612af782612ab6565b602082019050919050565b60006020820190508181036000830152612b1b81612adf565b9050919050565b7f4445464f546f6b656e3a6e6f742d617574686f72697a65640000000000000000600082015250565b6000612b5860188361238c565b9150612b6382612b22565b602082019050919050565b60006020820190508181036000830152612b8781612b4b565b9050919050565b6000604082019050612ba36000830185612a70565b612bb0602083018461254b565b9392505050565b600081519050612bc681612660565b92915050565b600060208284031215612be257612be161243c565b5b6000612bf084828501612bb7565b91505092915050565b600060c082019050612c0e60008301896125d2565b612c1b6020830188612a70565b612c286040830187612a70565b612c35606083018661254b565b612c42608083018561254b565b612c4f60a0830184612521565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c9b600283612c5a565b9150612ca682612c65565b600282019050919050565b6000819050919050565b612ccc612cc7826125c8565b612cb1565b82525050565b6000612cdd82612c8e565b9150612ce98285612cbb565b602082019150612cf98284612cbb565b6020820191508190509392505050565b7f4445464f546f6b656e3a696e76616c69642d616464726573732d300000000000600082015250565b6000612d3f601b8361238c565b9150612d4a82612d09565b602082019050919050565b60006020820190508181036000830152612d6e81612d32565b9050919050565b6000608082019050612d8a60008301876125d2565b612d976020830186612609565b612da460408301856125d2565b612db160608301846125d2565b95945050505050565b7f4445464f546f6b656e3a696e76616c69642d7065726d69740000000000000000600082015250565b6000612df060188361238c565b9150612dfb82612dba565b602082019050919050565b60006020820190508181036000830152612e1f81612de3565b9050919050565b7f4445464f546f6b656e3a7065726d69742d657870697265640000000000000000600082015250565b6000612e5c60188361238c565b9150612e6782612e26565b602082019050919050565b60006020820190508181036000830152612e8b81612e4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ecc8261249f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612efe57612efd612e92565b5b600182019050919050565b7f4445464f546f6b656e3a696e76616c69642d6e6f6e6365000000000000000000600082015250565b6000612f3f60178361238c565b9150612f4a82612f09565b602082019050919050565b60006020820190508181036000830152612f6e81612f32565b9050919050565b600060a082019050612f8a60008301886125d2565b612f9760208301876125d2565b612fa460408301866125d2565b612fb1606083018561254b565b612fbe6080830184612a70565b9695505050505050565b6000612fd38261249f565b9150612fde8361249f565b925082821015612ff157612ff0612e92565b5b828203905092915050565b60006130078261249f565b91506130128361249f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561304757613046612e92565b5b828201905092915050565b60006020820190506130676000830184612a70565b92915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006130a360148361238c565b91506130ae8261306d565b602082019050919050565b600060208201905081810360008301526130d281613096565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061310f60108361238c565b915061311a826130d9565b602082019050919050565b6000602082019050818103600083015261313e81613102565b905091905056fea2646970667358221220c3ed5ad3a19bba3b836ef25e920ffd3f30e3a539c8fc37e781c0d9b92f16abe364736f6c634300080f0033",
  "devdoc": {
    "author": "Decentralized Foundation Team",
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "decimals": {
        "details": "Returns the decimals places of the token."
      },
      "name": {
        "details": "Returns the name of the token."
      },
      "symbol": {
        "details": "Returns the symbol of the token."
      },
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "title": "DEFO Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC20 with Dai-like gas-less approvals with EIP712 signatures, admin access, black lists, burnable, pausable, and recoverable if tokens are mistakely sent",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_paused",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1106,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "transferLimiter",
        "offset": 1,
        "slot": "0",
        "type": "t_contract(ITransferLimiter)1077"
      },
      {
        "astId": 1110,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1114,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "wards",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1118,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "blacklist",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1132,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1134,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "initialized",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1138,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "balanceOf",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1144,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "allowance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1148,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "nonces",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1150,
        "contract": "contracts/token/DEFOToken.sol:DEFOToken",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ITransferLimiter)1077": {
        "encoding": "inplace",
        "label": "contract ITransferLimiter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}